<?xml version="1.0"?>
<doc>
<assembly>
<name>
Microsoft.VisualBasic.Imaging
</name>
</assembly>
<members>
<member name="T:Microsoft.VisualBasic.Imaging.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.My.Resources.Resources.colorbrewer">
<summary>
  Looks up a localized string similar to {  
  &quot;Spectral&quot;: {
    &quot;3&quot;: [ &quot;rgb(252,141,89)&quot;, &quot;rgb(255,255,191)&quot;, &quot;rgb(153,213,148)&quot; ],
    &quot;4&quot;: [ &quot;rgb(215,25,28)&quot;, &quot;rgb(253,174,97)&quot;, &quot;rgb(171,221,164)&quot;, &quot;rgb(43,131,186)&quot; ],
    &quot;5&quot;: [ &quot;rgb(215,25,28)&quot;, &quot;rgb(253,174,97)&quot;, &quot;rgb(255,255,191)&quot;, &quot;rgb(171,221,164)&quot;, &quot;rgb(43,131,186)&quot; ],
    &quot;6&quot;: [ &quot;rgb(213,62,79)&quot;, &quot;rgb(252,141,89)&quot;, &quot;rgb(254,224,139)&quot;, &quot;rgb(230,245,152)&quot;, &quot;rgb(153,213,148)&quot;, &quot;rgb(50,136,189)&quot; ],
    &quot;7&quot;: [ &quot;rgb(213,62,79)&quot;, &quot;rgb(252,141,89)&quot;, &quot;rgb(254,224,139)&quot;, &quot;rgb(255,255,191)&quot;, &quot;rgb( [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.My.Resources.Resources.DefaultTexture">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.My.Resources.Resources.designer_colors">
<summary>
  Looks up a localized string similar to {  
  &quot;DarkSeaGreen&quot;: [ &quot;LightYellow&quot;, &quot;Snow&quot;, &quot;Khaki&quot;, &quot;White&quot;, &quot;LightBlue&quot;, &quot;LemonChiffon&quot;, &quot;Wheat&quot;, &quot;Aqua&quot;, &quot;MintCream&quot;, &quot;PowderBlue&quot;, &quot;WhiteSmoke&quot;, &quot;Aquamarine&quot;, &quot;Moccasin&quot;, &quot;LightGrey&quot;, &quot;Turquoise&quot;, &quot;PaleGoldenrod&quot;, &quot;Azure&quot;, &quot;LightCyan&quot;, &quot;Silver&quot;, &quot;PapayaWhip&quot;, &quot;Ivory&quot;, &quot;OldLace&quot;, &quot;MediumAquamarine&quot;, &quot;MediumSpringGreen&quot;, &quot;Linen&quot;, &quot;SkyBlue&quot;, &quot;BlanchedAlmond&quot;, &quot;Cornsilk&quot;, &quot;PeachPuff&quot;, &quot;PaleGreen&quot;, &quot;MediumTurquoise&quot;, &quot;Cyan&quot;, &quot;Honeydew&quot;, &quot;DarkTurquoise&quot;, &quot;MistyRose&quot;, &quot;LightSkyBlue&quot;, &quot;DarkSeaGreen&quot;, &quot;Pink&quot; [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="F:Microsoft.VisualBasic.Imaging.Drawing2D.Colors.Designer.AvailableInterpolates">
<summary>
 {  
  &quot;Color [PapayaWhip]&quot;: [
    {
      &quot;knownColor&quot;: 93,
      &quot;name&quot;: null,
      &quot;state&quot;: 1,
      &quot;value&quot;: 0
    },
    {
      &quot;knownColor&quot;: 119,
      &quot;name&quot;: null,
      &quot;state&quot;: 1,
      &quot;value&quot;: 0
    },
    {
      &quot;knownColor&quot;: 30,
      &quot;name&quot;: null,
      &quot;state&quot;: 1,
      &quot;value&quot;: 0
    },
    {
      &quot;knownColor&quot;: 165,
      &quot;name&quot;: null,
      &quot;state&quot;: 1,
      &quot;value&quot;: 0
    },
    {
      &quot;knownColor&quot;: 81,
      &quot;name&quot;: null,
      &quot;state&quot;: 1,
      &quot;value&quot;: [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Colors.Designer.Colors(System.Drawing.Color[],System.Int32,System.Int32)">
 <summary>
 Some useful color tables for images and tools to handle them.
 Several color scales useful for image plots: a pleasing rainbow style color table patterned after 
 that used in Matlab by Tim Hoar and also some simple color interpolation schemes between two or 
 more colors. There is also a function that converts between colors and a real valued vector.
 </summary>
 <param name="col">A list of colors (names or hex values) to interpolate</param>
 <param name="n%">Number of color levels. The setting n=64 is the orignal definition.</param>
 <param name="alpha%">The transparency of the color – 255 is opaque and 0 is transparent. This is useful for overlays of color and still being able to view the graphics that is covered.</param>
 <returns>A vector giving the colors in a hexadecimal format, two extra hex digits are added for the alpha channel.</returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.IPlot">
 <summary>
 
 </summary>
 <param name="g">GDI+设备</param>
 <param name="grct">绘图区域的大小</param>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.g">
 <summary>
 Data plots graphics engine common abstract.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.g.GraphicsPlots(System.Drawing.Size@,System.Drawing.Size@,System.String,Microsoft.VisualBasic.Imaging.Drawing2D.IPlot)">
 <summary>
 Data plots graphics engine. Default: <paramref name="size"/>:=(4300, 2000), <paramref name="margin"/>:=(100,100)
 </summary>
 <param name="size"></param>
 <param name="margin"></param>
 <param name="bg"></param>
 <param name="plotAPI"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.g.GraphicsPlots(System.Drawing.Size@,System.Drawing.Size@,System.String,System.Action{System.Drawing.Graphics})">
 <summary>
 Data plots graphics engine.
 </summary>
 <param name="size"></param>
 <param name="margin"></param>
 <param name="bg"></param>
 <param name="plot"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.GraphicsRegion">
 <summary>
 绘图区域的参数
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Imaging.Drawing2D.GraphicsRegion.Size">
 <summary>
 整张画布的大小
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Imaging.Drawing2D.GraphicsRegion.Margin">
 <summary>
 画布的边留白
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.GraphicsRegion.PlotRegion">
 <summary>
 整张画布出去margin部分剩余的可供绘图的区域
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.GraphicsRegion.EntireArea">
 <summary>
 整张画布的大小区域
 </summary>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow">
 <summary>
 按照任意角度旋转的箭头对象
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.HeadLengthPercentage">
 <summary>
 箭头的头部占据整个长度的百分比
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.BodyHeightPercentage">
 <summary>
 箭头的主体部分占据整个高度的百分比
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.#ctor(System.Drawing.Point,System.Drawing.Size,System.Drawing.Color)">
 <summary>
 
 </summary>
 <param name="Location">箭头头部的位置</param>
 <param name="Size">高度和宽度</param>
 <param name="Color">填充的颜色</param>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.Size">
 <summary>
 返回图形上面的绘图的大小，而非箭头本身的大小
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.Left">
 <summary>
 忽略了箭头的方向，本箭头对象存粹的在进行图形绘制的时候的左右的位置
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.Right">
 <summary>
 忽略了箭头的方向，本箭头对象存粹的在进行图形绘制的时候的左右的位置
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Arrow.Draw(System.Drawing.Graphics@,System.Drawing.Point)">
 <summary>
  /|_____
 /       |
 \       |
  \|-----
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Border">
 <summary>
 边对象
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Pentacle.RotateTheta(System.Drawing.Point,System.Drawing.Point,System.Double)">
 <summary>
 旋转
 </summary>
 <param name="pt"></param>
 <param name="center"></param>
 <param name="theta"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Hexagon">
 <summary>
 六边形
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Circle.#ctor(System.Drawing.Point,System.Int32,System.Drawing.Color)">
 <summary>
 
 </summary>
 <param name="topLeft">左上角</param>
 <param name="d">圆的直径</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Circle.Draw(System.Drawing.Graphics@,System.Drawing.Point,System.Single,System.Drawing.Brush,Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Border)">
 <summary>
 绘制圆
 </summary>
 <param name="g"></param>
 <param name="center"></param>
 <param name="radius"></param>
 <param name="br"></param>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Triangle.DrawAsRightTriangle(System.Int32,System.Int32)">
 <summary>
 直角三角形
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Line.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Int32)">
 <summary>
 
 </summary>
 <param name="pt1">在进行位移的时候，这两个点之间的相对位置不会发生改变</param>
 <param name="pt2"></param>
 <param name="Color"></param>
 <param name="Width"></param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Shape">
 <summary>
 矢量图形
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Shape.EnableAutoLayout">
 <summary>
 默认是允许自动组织布局的
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Shapes.Shape.Draw(System.Drawing.Graphics@,System.Drawing.Point)">
 <summary>
 
 </summary>
 <param name="OverridesLoci">假若需要进行绘制到的时候复写当前的元素的位置，则请使用这个参数</param>
 <returns>函数返回当前元素在绘制之后所占据的区域</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.Text.MeasureString(Microsoft.VisualBasic.Imaging.GDIPlusDeviceHandle)">
 <summary>
 Measures the specified string when drawn with the specified System.Drawing.Font.(最大的Rectangle)
 </summary>
 <returns>This method returns a System.Drawing.SizeF structure that represents the size,
 in the units specified by the System.Drawing.Graphics.PageUnit property, of the
 string specified by the text parameter as drawn with the font parameter.</returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.TextAPI">
 <summary>
 基于HTML语法的字符串的绘制描述信息的解析
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.TextAPI.GetStrings(System.String,System.Drawing.Font,System.Drawing.Color)">
 <summary>
 
 </summary>
 <param name="html">这里只是一个很小的html的片段，仅仅用来描述所需要进行绘制的字符串的gdi+属性</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.TextAPI.DrawStrng(Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.String[],System.Drawing.Point,Microsoft.VisualBasic.Imaging.GDIPlusDeviceHandle)">
 <summary>
 
 </summary>
 <param name="texts">需要进行绘制的文本的集合</param>
 <param name="loc">最开始的左上角的位置</param>
 <param name="gdi"></param>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.String.MeasureString(Microsoft.VisualBasic.Imaging.GDIPlusDeviceHandle)">
 <summary>
 Measures the specified string when drawn with the specified System.Drawing.Font.
 </summary>
 <returns>This method returns a System.Drawing.SizeF structure that represents the size,
 in the units specified by the System.Drawing.Graphics.PageUnit property, of the
 string specified by the text parameter as drawn with the font parameter.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.String.Draw(Microsoft.VisualBasic.Imaging.GDIPlusDeviceHandle)">
 <summary>
 Draws the specified text string in the specified rectangle with the specified
 System.Drawing.Brush and System.Drawing.Font objects.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.Vector.Text.String.Draw(Microsoft.VisualBasic.Imaging.GDIPlusDeviceHandle,System.Drawing.Rectangle)">
 <summary>
 Draws the specified text string in the specified rectangle with the specified
 System.Drawing.Brush and System.Drawing.Font objects.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.VectorAPI">
 <summary>
 矢量图描述脚本的API函数
 </summary>
 <remarks></remarks>
 
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.Vectogram">
 <summary>
 用来描述一个向量图的GDI绘图设备
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing2D.DrawingScript">
 <summary>
 将绘图元素转换为Shoal脚本以方便进行保存
 </summary>
 <remarks>
 必须要有的元素：图形大小或者背景图片，这个元素是生成GDI设备锁必须的
 </remarks>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing2D.DrawingScript.ToVectogram">
 <summary>
 将脚本转换为矢量图绘图设备
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Imaging.Drawing3D.Surface.vertices">
 <summary>
 请注意，在这里面的点都是有先后顺序分别的
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Imaging.Drawing3D.Cube._faces">
 <summary>
 Create an array representing the 6 faces of a cube. Each face is composed by indices to the vertex array
 above.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.Cube.#ctor(System.Int32,System.Drawing.Color[])">
 <summary>
 
 </summary>
 <param name="d%">正方形的边的长度</param>
 <param name="colors"></param>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.Cube.GetEnumerator">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 ```
 0 - {0, 1, 2, 3} 0,1,2,3 = 0,1,2,3
 1 - {1, 5, 6, 2}   1,2   = 5,6
 2 - {5, 4, 7, 6}   1,2   = 4,7
 3 - {4, 0, 3, 7}
 4 - {0, 4, 5, 1}
 5 - {3, 2, 6, 7}
 ```
 </remarks>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing3D.GDIDevice">
 <summary>
 GDI+图形设备的简易抽象
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.GDIDevice.GDIDevice_Load(System.Object,System.EventArgs)">
 <summary>
 Enable double-buffering to eliminate flickering.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.GDIDevice._animationLoop_Tick(System.Object,System.EventArgs)">
 <summary>
 Forces the Paint event to be called.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing3D.Point3D">
 <summary>
 Defines the Point3D class that represents points in 3D space.
 Developed by leonelmachava &lt;leonelmachava@gmail.com>
 http://codentronix.com

 Copyright (c) 2011 Leonel Machava
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.Point3D.RotateX(System.Double)">
 <summary>
 
 </summary>
 <param name="angle">Degree.(度，函数里面会自动转换为三角函数所需要的弧度的)</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.Point3D.Project(System.Int32,System.Int32,System.Int32,System.Double)">
 <summary>
 Project the 3D point to the 2D screen. By using the projection result, 
 just read the property <see cref="P:Microsoft.VisualBasic.Imaging.Drawing3D.Point3D.PointXY(System.Drawing.Size)"/>.
 (将3D投影为2D，所以只需要取结果之中的<see cref="P:Microsoft.VisualBasic.Imaging.Drawing3D.Point3D.X"/>和<see cref="P:Microsoft.VisualBasic.Imaging.Drawing3D.Point3D.Y"/>就行了)
 </summary>
 <param name="viewWidth"></param>
 <param name="viewHeight"></param>
 <param name="fov">256默认值</param>
 <param name="viewDistance"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.Drawing3D.Transformation">
 <summary>
 3D coordinate transformation tools.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.Transformation.SpaceToGrid(Microsoft.VisualBasic.Imaging.Drawing3D.Point3D,System.Double)">
 <summary>
 Transform point 3D into point 2D
 </summary>
 <param name="pt3D"></param>
 <param name="xRotate"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.Drawing3D.Transformation.SpaceToGrid(Microsoft.VisualBasic.Imaging.Drawing3D.Point3D,System.Double,System.Drawing.Point)">
 <summary>
 Project of the 3D point to 2D point
 </summary>
 <param name="pt3D"></param>
 <param name="xRotate"></param>
 <param name="offset"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.SVG.ICanvas">
 <summary>
 SVG之中的画布对象，<see cref="T:Microsoft.VisualBasic.Imaging.SVG.SVGXml"/>和<see cref="T:Microsoft.VisualBasic.Imaging.SVG.g"/>都属于这种类型
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.SVG.g">
 <summary>
 SVG graphics unit
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.SVG.Image">
 <summary>
 Does SVG support embedding of bitmap images?
 
 + http://stackoverflow.com/questions/6249664/does-svg-support-embedding-of-bitmap-images
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Imaging.SVG.Image.base64Header">
 <summary>
 ``data:image/png;base64,...``
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.SVG.SVGXml">
 <summary>
 The svg vector graphics in Xml document format.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.SVG.SVGXml.defs">
 <summary>
 Style definition of the xml node in this svg document. 
 you can define the style by using css and set the class 
 attribute for the specific node to controls the 
 visualize style.
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.SVG.SVGXml.style">
 <summary>
 SVG对象也会在这里面定义CSS
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.SVG.SVGXml.SaveAsXml(System.String,System.Text.Encoding)">
 <summary>
 Save this svg document object into the file system.
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.SVG.SVGXml.SaveAsXml(System.String,Microsoft.VisualBasic.Text.Encodings)">
 <summary>
 Save this svg document object into the file system.
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.SVG.CSS.DirectedForceGraph">
 <summary>
 Style generator for the value of <see cref="P:Microsoft.VisualBasic.MIME.Markup.HTML.XmlMeta.CSS.style"/>
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Imaging.SVG.node">
 <summary>
 The basically SVG XML document node, it can be tweaks on the style by using CSS
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.SVG.node.style">
 <summary>
 CSS style definition.(请注意，假若是SVG对象则赋值这个属性无效)
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.Imaging.SVG.node.class">
 <summary>
 node class id, just like the id in HTML, you can also using this attribute to tweaks on the style by CSS.
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Imaging.TextureResourceLoader.LoadTextureResource(System.Drawing.Image,System.Drawing.Size,System.Int32,System.Int32)">
 <summary>
 按照指定的资源图片和参数进行纹理资源的剪裁处理
 </summary>
 <param name="Resource"></param>
 <param name="Size"></param>
 <param name="IntervalWidth">纹理模块之间在水平上的间隔宽度</param>
 <param name="IntervalHeight">纹理模块之间在竖直方向上的间隔宽度</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
</members>
</doc>
