<?xml version="1.0"?>
<doc>
<assembly>
<name>
Microsoft.VisualBasic.MIME.RDF_v1.0_32.0.0.86544__84845dcb8280ca91
</name>
</assembly>
<members>
<member name="T:Microsoft.VisualBasic.MIME.RDF.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.DCMI">
 <summary>
 RDF 都柏林核心元数据倡议
 (http://w3school.com.cn/rdf/rdf_dublin.asp)
 </summary>
 <remarks>
 都柏林核心元数据倡议 (DCMI) 已创建了一些供描述文档的预定义属性。
 
 Dublin 核心
 RDF 是元数据（关于数据的数据）。RDF 被用于描述信息资源。
 都柏林核心是一套供描述文档的预定义属性。
 第一份都柏林核心属性是于1995年 在俄亥俄州的都柏林的元数据工作组被定义的，目前由都柏林元数据倡议来维护。
 </remarks>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Contributor">
 <summary>
 一个负责为资源内容作出贡献的实体(如作者)。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Coverage">
 <summary>
 资源内容的氛围或作用域
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Creator">
 <summary>
 一个主要负责创建资源内容的实体。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Format">
 <summary>
 物理或数字的资源表现形式。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Date">
 <summary>
 在资源生命周期中某事件的日期。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Description">
 <summary>
 对资源内容的说明。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Identifier">
 <summary>
 一个对在给定上下文中的资源的明确引用
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Language">
 <summary>
 资源智力内容所用的语言。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Publisher">
 <summary>
 一个负责使得资源内容可用的实体
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Relation">
 <summary>
 一个对某个相关资源的引用
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Rights">
 <summary>
 有关保留在资源之内和之上的权利的信息
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Source">
 <summary>
 一个对作为目前资源的来源的资源引用。
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Subject">
 <summary>
 一个资源内容的主题
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Title">
 <summary>
 一个给资源起的名称
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DCMI.Type">
 <summary>
 资源内容的种类或类型。
 </summary>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.DataTypes">
 <summary>
 http://www.w3.org/2001/XMLSchema
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.DataTypes.GetType(System.String)">
 <summary>
 RDF data type
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.DataTypes.SchemaDataType(Microsoft.VisualBasic.MIME.RDF.EntityProperty)">
 <summary>
 Default is string type if property value of <see cref="P:Microsoft.VisualBasic.MIME.RDF.EntityProperty.dataType"/> is null or empty
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.RDFEntity">
 <summary>
 在rdf之中被描述的对象实体
 </summary>
 
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.RDFEntity.RDFId">
 <summary>
 rdf:ID
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.RDFEntity.about">
 <summary>
 [资源] 是可拥有 URI 的任何事物
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.RDFEntity.Properties">
 <summary>
 [属性]   是拥有名称的资源
 [属性值] 是某个属性的值，(请注意一个属性值可以是另外一个<see cref="P:Microsoft.VisualBasic.MIME.RDF.EntityProperty.resource"/>）
 xml文档在rdf反序列化之后，原有的类型定义之中除了自有的属性被保留下来了之外，具备指向其他资源的属性都被保存在了这个属性字典之中
 </summary>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.EntityProperty">
 <summary>
 
 </summary>
 <remarks>
 2016.5.29
 
 请注意，在这里的对<see cref="T:Microsoft.VisualBasic.Language.ClassObject"/>类型的继承是为了解决simpleContent的BUG的:
 
 System.Exception: 
 SMRUCC.genomics.AnalysisTools.DataVisualization.Interaction.Cytoscape.DocumentFormat.CytoscapeGraphView.GraphAttribute 
 ---> System.InvalidOperationException: There was an error reflecting type 'SMRUCC.genomics.AnalysisTools.DataVisualization.Interaction.Cytoscape.DocumentFormat.CytoscapeGraphView.GraphAttribute'. 
 ---> System.InvalidOperationException: There was an error reflecting property 'RDF'. 
 ---> System.InvalidOperationException: There was an error reflecting type 'SMRUCC.genomics.AnalysisTools.DataVisualization.Interaction.Cytoscape.DocumentFormat.CytoscapeGraphView.DocumentElements.NetworkMetadata'. 
 ---> System.InvalidOperationException: Cannot serialize object of type '<see cref="T:Microsoft.VisualBasic.MIME.RDF.RDFEntity"/>'. 
 
 Base type '<see cref="T:Microsoft.VisualBasic.MIME.RDF.RDFProperty"/>' has simpleContent and can only be extended by adding XmlAttribute elements. 
 Please consider changing XmlText member of the base class to string array.
 </remarks>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.EntityProperty.dataType">
 <summary>
 rdf:datatype
 </summary>
 <returns></returns>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.EntityProperty.resource">
 <summary>
 rdf:resource
 </summary>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.RDF">
 <summary>
 做序列化的时候请务必要添加一个自定义的属性：&lt;XmlType(RDF.RDF_PREFIX &amp; "RDF")>
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.RDF.LoadDocument(System.String)">
 <summary>
 
 </summary>
 <param name="Text">参数值为文件之中的字符串内容，而非文件的路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.RDF.ToString">
 <summary>
 将RDF对象转换为XML文件之中的字符串
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.DocumentStream.GenericXmlDocument.GetNodesValue(System.String)">
 <summary>
 
 </summary>
 <param name="NodePath">Path使用/或者\进行分割</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.DocumentStream.ElementNode.InternalText">
 <summary>
 内部节点的XML字符串
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Framework.DynamicCode.VBC.CodeDOMCreator.DeclareTypeDefine(Microsoft.VisualBasic.MIME.RDF.Serialization.RDFType,System.String)">
 <summary>
 需要生成新类型是由于XML序列化和反序列化操作的需要
 </summary>
 <param name="RDFType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.Framework.DynamicCode.VBC.DynamicCompiler">
 <summary>
 编译整个LINQ语句的动态代码编译器
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MIME.RDF.Framework.DynamicCode.VBC.DynamicCompiler.DotNETReferenceAssembliesDir">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Framework.DynamicCode.VBC.DynamicCompiler.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="SDK">.NET Framework Reference Assembly文件夹的位置</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Framework.DynamicCode.VBC.DynamicCompiler.Compile(System.CodeDom.CodeCompileUnit,System.String[],System.String)">
 <summary>
 Compile the codedom object model into a binary assembly module file.(将CodeDOM对象模型编译为二进制应用程序文件)
 </summary>
 <param name="ObjectModel">CodeDom dynamic code object model.(目标动态代码的对象模型)</param>
 <param name="Reference">Reference assemby file path collection.(用户代码的引用DLL文件列表)</param>
 <param name="CodeStyle">VisualBasic, C#</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Framework.DynamicCode.VBC.DynamicCompiler.GenerateCode(System.CodeDom.CodeNamespace,System.String)">
 <summary>
 Generate the source code from the CodeDOM object model.(根据对象模型生成源代码以方便调试程序)
 </summary>
 <param name="NameSpace"></param>
 <param name="CodeStyle">VisualBasic, C#</param>
 <returns></returns>
 <remarks>
 You can easily convert the source code between VisualBasic and C# using this function just by makes change in statement: 
 CodeDomProvider.GetCompilerInfo("VisualBasic").CreateProvider().GenerateCodeFromNamespace([NameSpace], sWriter, Options)
 Modify the VisualBasic in to C#
 </remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Schema.GetType(Microsoft.VisualBasic.MIME.RDF.Serialization.RDFType)">
 <summary>
 没有添加RDF自定义属性的属性对象将会被忽略掉
 </summary>
 <param name="RDFRootType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.Serializer`1">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <remarks>
 工作流程
 
  -- 解析类型定义
  -- CodeDOM创建新类型
  -- RDF文件格式化
  -- 使用新类型进行反序列化
  -- 属性映射
  -- 返回原来的目标对象实例
 </remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Serializer`1.InitlaizeSchema">
 <summary>
 第一步，解析类型定义
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Serializer`1.CreateDynamicType(Microsoft.VisualBasic.MIME.RDF.Schema)">
 <summary>
 第二步，CodeDOM创建新类型
 </summary>
 <param name="SchemaInfo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Serializer`1.Normalization(System.Text.StringBuilder)">
 <summary>
 第三部，RDF文件格式化
 </summary>
 <param name="ObjectStream"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Serializer`1.Copy(System.Object)">
 <summary>
 第五步，属性映射
 </summary>
 <param name="DynamicInstance"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.Serialization.PropertyAttribute">
 <summary>
 Custom attribute class base type that using on a property target.(适用于Property对象类型上的自定义属性)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFIgnore">
 <summary>
 This custom attribute indicated that the bind target property will not be parsed by the rdf serializer.
 (本自定义属性指明所绑定的目标属性对象将不会被解析)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFElement.TypeInfo">
 <summary>
 Get the <see cref="T:System.Type"></see> type information of the class type <see cref="T:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFElement"></see>
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFAttribute.TypeInfo">
 <summary>
 Get the <see cref="T:System.Type"></see> type information of the class type <see cref="T:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFAttribute"></see>
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFType">
 <summary>
 在申明RDF对象的时候所申明的Schema中的目标类型
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFType._BindTypeInfo">
 <summary>
 自己本身的类型属性
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFType._BindElementTypeInfo">
 <summary>
 假若目标类型为一个数组类型，则本属性则为目标数组的元素的类型，但是不是的话，则本属性为空值
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFType.CreateTypeDefine(System.Type)">
 <summary>
 当目标类型不存在RDFType自定义属性的时候，进行创建的方法
 </summary>
 <param name="TypeInfo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFNamespaceImports">
 <summary>
 RDF命名空间的Schema导入来源
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFNamespaceImports.Type">
 <summary>
 Type name of the target imports namespace
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFNamespaceImports.TypeInfo">
 <summary>
 Get the <see cref="T:System.Type"></see> type information of the class type <see cref="T:Microsoft.VisualBasic.MIME.RDF.Serialization.RDFNamespaceImports"></see>
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
