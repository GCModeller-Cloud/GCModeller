library(PFSNet)
library(PFSNet)
setwd("E:/GCModeller/src/GCModeller/annotations/GSEA/PFSNet/data")
a <- pfsnet("./sample_control.txt","./sample_test.txt", "./pathways.txt", t1=0.8, t2=0.7, n=10)
a
names(a)
a$class1
saveRDS(a, file = "./demo.rds")
str(a)
a
a
cat(a)
print
toString(a)
writeLines( toString(a), "./run1.txt")
b <- pfsnet("./sample_control.txt","./sample_test.txt", "./pathways.txt", t1=0.8, t2=0.7, n=10)
writeLines( toString(b), "./run1.txt")
ccc <- readRDS("X:/Temp/TFSTemp/vctmp3296_883544.demo.8e862b14.rds")
writeLines( toString(ccc), "./run1.txt")
a <- readRDS("E:/GCModeller/src/GCModeller/annotations/GSEA/PFSNet/data/demo.rds")
a
names(a)
a$class1
a$class2
names(a$class2)
names(a$class2$subnets)
subnets = classSet$subnets;
subnets = a$class2$subnets;
subnets
names(subnets)
subnets[[1]]
names(subnets)
subnet = subnets[[1]]
subnet
str(subnet)
subnet
result = subnet[[9]];
result
str(result)
genes = result[[3]]$name;
genes
paste(genes, collapse = "; ")
as.tabular = function(pfsnet, class1 = "A", class2 = "B") {
result = as.tabular.classSet(pfsnet$class1, className = class1);
result = rbind(result, as.tabular.classSet(pfsnet$class2, className = class2));
result;
}
as.tabular.classSet = function(classSet, className = "A") {
subnets = classSet$subnets;
table = NULL;
for(pathway in names(subnets)) {
table = rbind(table, as.tabular.subnetwork(subnets[[pathway]], pathway));
}
table[, "phenotype"] = className;
table;
}
as.tabular.subnetwork = function(subnet, pathway) {
result = subnet[[9]];
statistics = result[[2]]$statistics;
pvalue = result[[2]]$p.value;
genes = result[[3]]$name;
weight1 = result[[3]]$weight;
weight2 = result[[3]]$weight2;
list(subnetwork = pathway,
statistics = statistics,
pvalue = pvalue,
nodes = length(genes),
edges = 0,
weight1 = mean(weight1),
weight2 = mean(weight2),
genes = paste(genes, collapse = "; "));
}
as.tabular (a)
a
class1 = "A"
class2 = "B"
pfsnet = a
result = as.tabular.classSet(pfsnet$class1, className = class1);
classSet = pfsnet$class2
className = class1
subnets = classSet$subnets;
table = NULL;
for(pathway in names(subnets)) {
table = rbind(table, as.tabular.subnetwork(subnets[[pathway]], pathway));
}
table
table
subnetwork = table[, "subnetwork"];
statistics =table[, "statistics"];
pvalue = table[, "pvalue"];
nodes = table[, "nodes"];
edges = table[, "edges"];
weight1 = table[, "weight1"];
weight2 = table[, "weight2"];
genes = table[, "genes"];
genes
weight1
unlist(weight1)
subnetwork = unlist(table[, "subnetwork"]);
statistics =unlist( table[, "statistics"]);
pvalue =unlist(  table[, "pvalue"]);
nodes =unlist(  table[, "nodes"]);
edges = unlist( table[, "edges"]);
weight1 = unlist( table[, "weight1"]);
weight2 = unlist( table[, "weight2"]);
genes =unlist(  table[, "genes"]);
data.frame(
subnetwork	=subnetwork,
phenotype = className,
statistics = statistics,
pvalue = pvalue,
nodes	=nodes,
edges = edges,
weight1 = weight1,
weight2 = weight2,
genes = genes
);
data.frame(
subnetwork	=subnetwork,
phenotype = className,
statistics = statistics,
pvalue = pvalue,
nodes	=nodes,
edges = edges,
weight1 = weight1,
weight2 = weight2,
genes = genes
);
as.tabular = function(pfsnet, class1 = "A", class2 = "B") {
result = as.tabular.classSet(pfsnet$class1, className = class1);
result = rbind(result, as.tabular.classSet(pfsnet$class2, className = class2));
result;
}
as.tabular.classSet = function(classSet, className = "A") {
subnets = classSet$subnets;
table = NULL;
for(pathway in names(subnets)) {
table = rbind(table, as.tabular.subnetwork(subnets[[pathway]], pathway));
}
subnetwork = unlist(table[, "subnetwork"]);
statistics =unlist( table[, "statistics"]);
pvalue =unlist(  table[, "pvalue"]);
nodes =unlist(  table[, "nodes"]);
edges = unlist( table[, "edges"]);
weight1 = unlist( table[, "weight1"]);
weight2 = unlist( table[, "weight2"]);
genes =unlist(  table[, "genes"]);
data.frame(
subnetwork	=subnetwork,
phenotype = className,
statistics = statistics,
pvalue = pvalue,
nodes	=nodes,
edges = edges,
weight1 = weight1,
weight2 = weight2,
genes = genes
);
}
as.tabular.subnetwork = function(subnet, pathway) {
result = subnet[[9]];
statistics = result[[2]]$statistics;
pvalue = result[[2]]$p.value;
genes = result[[3]]$name;
weight1 = result[[3]]$weight;
weight2 = result[[3]]$weight2;
list(subnetwork = pathway,
statistics = statistics,
pvalue = pvalue,
nodes = length(genes),
edges = 0,
weight1 = mean(weight1),
weight2 = mean(weight2),
genes = paste(genes, collapse = "; "));
}
as.tabular(a)
a$class1
as.tabular.classSet = function(classSet, className = "A") {
subnets = classSet$subnets;
table = NULL;
if (length(subnets) == 0) {
NULL;
} else {
for(pathway in names(subnets)) {
table = rbind(table, as.tabular.subnetwork(subnets[[pathway]], pathway));
}
subnetwork = unlist(table[, "subnetwork"]);
statistics =unlist( table[, "statistics"]);
pvalue =unlist(  table[, "pvalue"]);
nodes =unlist(  table[, "nodes"]);
edges = unlist( table[, "edges"]);
weight1 = unlist( table[, "weight1"]);
weight2 = unlist( table[, "weight2"]);
genes =unlist(  table[, "genes"]);
data.frame(
subnetwork	=subnetwork,
phenotype = className,
statistics = statistics,
pvalue = pvalue,
nodes	=nodes,
edges = edges,
weight1 = weight1,
weight2 = weight2,
genes = genes
);
}
}
as.tabular(a)
as.tabular(a)
