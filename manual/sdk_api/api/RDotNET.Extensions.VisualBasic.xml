<?xml version="1.0"?>
<doc>
<assembly>
<name>
RDotNET.Extensions.VisualBasic
</name>
</assembly>
<members>
<member name="M:RDotNET.Extensions.VisualBasic.RInit.StartEngineServices">
 <summary>
 Automatically search for the path of the R system and then construct a R session for you.
 (如果在注册表之中已经存在了R的路径的值或者你已经设置好了环境变量，则可以直接使用本函数进行初始化操作)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RInit.StartEngineServices(System.String)">
 <summary>
 Manual setup the R system path.(这个函数是在没有自动设置好环境变量的时候进行手动的环境变量设置所使用的初始化方法)
 </summary>
 <param name="R_HOME"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RScriptInvoke">
 <summary>
 推荐使用这个对象来执行R脚本
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScriptInvoke.Invoke``1(System.Func{System.String[],``0})">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="parser">提供了R数据输出解析的方法</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScriptInvoke.Invoke``1">
 <summary>
 
 </summary>
 <typeparam name="T">在R之中的类型必须是S4Object对象</typeparam>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.IRToken">
 <summary>
 R之中的单步函数调用
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.IRToken.additional">
 <summary>
 ... the additional parameters
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRToken.RScript">
 <summary>

 </summary>
 <returns>由于这个对象只是对一个表达式的抽象，最常用的是对一个函数调用的抽象，所以library在这里不可以自动添加，需要自己在后面手工添加</returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRToken.op_Like(System.String,RDotNET.Extensions.VisualBasic.IRToken)">
 <summary>
 A part of previous token
 </summary>
 <param name="token"></param>
 <param name="t"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRToken.op_Addition(System.Text.StringBuilder,RDotNET.Extensions.VisualBasic.IRToken)">
 <summary>
 AppendLine
 </summary>
 <param name="sb"></param>
 <param name="token"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRToken.op_LessThanOrEqual(System.String,RDotNET.Extensions.VisualBasic.IRToken)">
 <summary>
 variable value assignment
 </summary>
 <param name="s"></param>
 <param name="token"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRToken.op_LessThanOrEqual(RDotNET.Extensions.VisualBasic.IRToken,System.String)">
 <summary>
 variable value assignment
 </summary>
 <param name="s"></param>
 <param name="token"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRToken.__assertion``1(``0,``0,``0)">
 <summary>

 </summary>
 <typeparam name="T"></typeparam>
 <param name="test">输入</param>
 <param name="[default]">默认值</param>
 <param name="[set]">源属性</param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.as.data.DataFrameAPI">
 <summary>
 Functions to check if an object is a data frame, or coerce it if possible.
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.base.as.data.DataFrameAPI.frame(System.String,System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="x">any R object.</param>
 <param name="rowNames">NULL or a character vector giving the row names for the data frame. Missing values are not allowed.</param>
 <param name="[optional]">logical. If TRUE, setting row names and converting column names (to syntactic names: see make.names) is optional.</param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.save">
 <summary>
 save writes an external representation of R objects to the specified file. The objects can be read back from the file at a later date by using the function load or attach (or data in some cases).
 </summary>
 <remarks>
 The names of the objects specified either as symbols (or character strings) in ... or as a character vector in list are used to look up the objects from environment envir. By default promises are evaluated, but if eval.promises = FALSE promises are saved (together with their evaluation environments). (Promises embedded in objects are always saved unevaluated.)

 All R platforms use the XDR (bigendian) representation Of C ints And doubles In binary save-d files, And these are portable across all R platforms.
 ASCII saves used To be useful For moving data between platforms but are now mainly Of historical interest. They can be more compact than binary saves where compression Is Not used, but are almost always slower To both read And write: binary saves compress much better than ASCII ones. Further, Decimal ASCII saves may Not restore Double/complex values exactly, And what value Is restored may depend On the R platform.
 Default values For the ascii, compress, safe And version arguments can be modified With the "save.defaults" Option (used both by save And save.image), see also the 'Examples’ section. If a "save.image.defaults" option is set it is used in preference to "save.defaults" for function save.image (which allows this to have different defaults). In addition, compression_level can be part of the "save.defaults" option.
 A connection that Is Not already open will be opened In mode "wb". Supplying a connection which Is open And Not In binary mode gives an Error.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.Func(RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RExpression[],System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
 <summary>
 Save R Objects
 </summary>
 <param name="x"></param>
 <param name="list"></param>
 <param name="file"></param>
 <param name="ascii"></param>
 <param name="version"></param>
 <param name="envir"></param>
 <param name="compress"></param>
 <param name="compression_level"></param>
 <param name="evalpromises"></param>
 <param name="precheck"></param>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.x">
 <summary>
 the names of the objects to be saved (as symbols or character strings).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.list">
 <summary>
 A character vector containing the names of objects to be saved.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.file">
 <summary>
 a (writable binary-mode) connection or the name of the file where the data will be saved (when tilde expansion is done). Must be a file name for save.image or version = 1.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.ascii">
 <summary>
 if TRUE, an ASCII representation of the data is written. The default value of ascii is FALSE which leads to a binary file being written. If NA and version >= 2, a different ASCII representation is used which writes double/complex numbers as binary fractions.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.version">
 <summary>
 the workspace format version to use. NULL specifies the current default format. The version used from R 0.99.0 to R 1.3.1 was version 1. The default format as from R 1.4.0 is version 2.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.envir">
 <summary>
 environment to search for objects to be saved.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.compress">
 <summary>
 logical or character string specifying whether saving to a named file is to use compression. TRUE corresponds to gzip compression, and character strings "gzip", "bzip2" or "xz" specify the type of compression. Ignored when file is a connection and for workspace format version 1.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.compression_level">
 <summary>
 integer: the level of compression to be used. Defaults to 6 for gzip compression and to 9 for bzip2 or xz compression.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.evalPromises">
 <summary>
 logical: should objects which are promises be forced before saving?
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.save.precheck">
 <summary>
 logical: should the existence Of the objects be checked before starting To save (And In particular before opening the file/connection)? Does Not apply To version 1 saves.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.saveImage">
 <summary>
 save.image() is just a short-cut for ‘save my current workspace’, i.e., save(list = ls(all.names = TRUE), file = ".RData", envir = .GlobalEnv). It is also what happens with q("yes").
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.saveImage.file">
 <summary>
 a (writable binary-mode) connection or the name of the file where the data will be saved (when tilde expansion is done). Must be a file name for save.image or version = 1.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.saveImage.version">
 <summary>
 the workspace format version to use. NULL specifies the current default format. The version used from R 0.99.0 to R 1.3.1 was version 1. The default format as from R 1.4.0 is version 2.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.saveImage.ascii">
 <summary>
 if TRUE, an ASCII representation of the data is written. The default value of ascii is FALSE which leads to a binary file being written. 
 If NA and version >= 2, a different ASCII representation is used which writes double/complex numbers as binary fractions.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.saveImage.compress">
 <summary>
 logical or character string specifying whether saving to a named file is to use compression. TRUE corresponds to gzip compression, and character strings "gzip", "bzip2" or "xz" specify the type of compression. 
 Ignored when file is a connection and for workspace format version 1.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.saveImage.safe">
 <summary>
 logical. If TRUE, a temporary file is used for creating the saved workspace. The temporary file is renamed to file if the save succeeds. 
 This preserves an existing workspace file if the save fails, but at the cost of using extra disk space during the save.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.Extremes.extremes">
 <summary>
 Returns the (parallel) maxima and minima of the input values.
 </summary>
 <remarks>
 max and min return the maximum or minimum of all the values present in their arguments, as integer if all are logical or integer, as double if all are numeric, and character otherwise.
 If na.rm Is False an NA value In any Of the arguments will cause a value Of NA To be returned, otherwise NA values are ignored.
 The minimum And maximum Of a numeric empty Set are +Inf And -Inf (In this order!) which ensures transitivity, e.g., min(x1, min(x2)) == min(x1, x2). For numeric x max(x) == -Inf And min(x) == +Inf whenever length(x) == 0 (after removing missing values If requested). However, pmax And pmin Return NA If all the parallel elements are NA even For na.rm = True.
 pmax And pmin take one Or more vectors (Or matrices) as arguments And return a single vector giving the 'parallel’ maxima (or minima) of the vectors. The first element of the result is the maximum (minimum) of the first elements of all the arguments, the second element of the result is the maximum (minimum) of the second elements of all the arguments and so on. Shorter inputs (of non-zero length) are recycled if necessary. Attributes (see attributes: such as names or dim) are copied from the first argument (if applicable).
 pmax.int And pmin.int are faster internal versions only used when all arguments are atomic vectors And there are no classes: they drop all attributes. (Note that all versions fail For raw And complex vectors since these have no ordering.)
 max And min are generic functions: methods can be defined For them individually Or via the Summary group generic. For this To work properly, the arguments ... should be unnamed, And dispatch Is On the first argument.
 By definition the min/max Of a numeric vector containing an NaN Is NaN, except that the min/max Of any vector containing an NA Is NA even If it also contains an NaN. Note that max(NA, Inf) == NA even though the maximum would be Inf whatever the missing value actually Is.
 Character versions are sorted lexicographically, And this depends On the collating sequence Of the locale In use: the help For 'Comparison’ gives details. The max/min of an empty character vector is defined to be character NA. (One could argue that as "" is the smallest character element, the maximum should be "", but there is no obvious candidate for the minimum.)
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.Extremes.extremes.x">
 <summary>
 numeric or character arguments (see Note).
 </summary>
 <remarks>
 ‘Numeric’ arguments are vectors of type integer and numeric, and logical (coerced to integer). For historical reasons, NULL is accepted as equivalent to integer(0).
 pmax And pmin will also work on classed objects with appropriate methods for comparison, Is.na And rep (if recycling of arguments Is needed).
 </remarks>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.Extremes.extremes.NArm">
 <summary>
 a logical indicating whether missing values should be removed.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.expandGrid">
 <summary>
 Create a data frame from all combinations of the supplied vectors or factors. See the description of the return value for precise details of the way this is done.
 
 A data frame containing one row for each combination of the supplied factors. The first factors vary fastest. The columns are labelled by the factors if these are supplied as named arguments or named components of a list. The row names are ‘automatic’.
 Attribute "out.attrs" Is a list which gives the dimension And dimnames for use by predict methods.
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.expandGrid.x">
 <summary>
 vectors, factors or a list containing these.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.expandGrid.KEEP_OUT_ATTRS">
 <summary>
 a logical indicating the "out.attrs" attribute (see below) should be computed and returned.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.expandGrid.stringsAsFactors">
 <summary>
 logical specifying if character vectors are converted to factors.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.options">
 <summary>
 Allow the user to set and examine a variety of global options which affect the way in which R computes and displays its results.
 (由于options函数会设置环境变量，由于设置的变量很少，但是大部分参数为逻辑值，所以在这里使用RExpression类型来防止默认为True的参数被误设置为False)
 </summary>
 <remarks>
 Invoking options() with no arguments returns a list with the current values of the options. Note that not all options listed below are set initially. To access the value of a single option, one should use, e.g., getOption("width") rather than options("width") which is a list of length one.
 For options(), a list of all set options sorted by name. For options(name), a list of length one containing the set value, or NULL if it is unset. For uses setting one or more options, a list with the previous values of the options changed (returned invisibly).
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.addSmooth">
 <summary>
 typically logical, defaulting To True. Could also be Set To an Integer For specifying how many (simulated) smooths should be added. This Is currently only used by plot.lm.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.browserNLdisabled">
 <summary>
 logical: whether newline Is disabled As a synonym For "n" In the browser.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.checkPackageLicense">
 <summary>
 logical, Not set by default. If true, library asks a user to accept any non-standard license at first use.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.checkBounds">
 <summary>
 logical, defaulting to FALSE. If true, a warning Is produced whenever a vector (atomic Or list) Is extended, by something Like x &lt;- 13; x[5] &lt;- 6.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.CBoundsCheck">
 <summary>
 logical, controlling whether .C And .Fortran make copies to check for array over-runs on the atomic vector arguments.
 Initially set from value of the environment variable R_C_BOUNDS_CHECK (set to yes to enable).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.continue">
 <summary>
 a non-empty String setting the prompt used For lines which Continue over one line.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.defaultPackages">
 <summary>
 the packages that are attached by Default When R starts up. 
 Initially Set from value Of the environment variable R_DEFAULT_PACKAGES, Or If that Is unset To c("datasets", "utils", "grDevices", "graphics", "stats", "methods"). (Set R_DEFAULT_PACKAGES To NULL Or a comma-separated list Of package names.) It will Not work To Set this In a '.Rprofile’ file, as its value is consulted before that file is read.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.deparseCutoff">
 <summary>
 Integer value controlling the printing of language constructs which are deparsed. Default 60.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.deparseMaxLines">
 <summary>
 controls the number Of lines used When deparsing In traceback, browser, And upon entry To a Function whose debugging flag Is Set. 
 Initially unset, And only used If Set To a positive Integer.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.digits">
 <summary>
 controls the number Of digits To print When printing numeric values. It Is a suggestion only. Valid values are 1...22 With Default 7. 
 See the note In print.Default about values greater than 15.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.digitsSecs">
 <summary>
 controls the maximum number Of digits To print When formatting time values In seconds. Valid values are 0...6 With Default 0. See strftime.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.downloadFileExtra">
 <summary>
 Extra command-line argument(s) For non-Default methods: see download.file.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.downloadFileMethod">
 <summary>
 Method to be used for download.file. Currently download methods "internal", "wininet" (Windows only), "libcurl", "wget" And "curl" are available. If Not set, method = "auto" Is chosen: see download.file.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.echo">
 <summary>
 logical. Only used in non-interactive mode, when it controls whether input Is echoed. Command-line option --slave sets this to FALSE, but otherwise it starts the session as TRUE.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.encoding">
 <summary>
 The name Of an encoding, Default "native.enc". See connections.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.error">
 <summary>
 either a Function Or an expression governing the handling Of non-catastrophic errors such As those generated by Stop As well As by signals And internally detected errors. 
 If the Option Is a Function, a Call To that Function, With no arguments, Is generated As the expression. 
 The Default value Is NULL: see stop for the behaviour in that case. The functions dump.frames And recover provide alternatives that allow post-mortem debugging. 
 Note that these need to specified as e.g. options(error = utils:recover) in startup files such as '.Rprofile’.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.expressions">
 <summary>
 sets a limit On the number Of nested expressions that will be evaluated. Valid values are 25...500000 With Default 5000. 
 If you increase it, you may also want To start R With a larger protection stack; see --max-ppsize In Memory. 
 Note too that you may cause a segfault from overflow Of the C stack, And On OSes where it Is possible you may want To increase that. 
 Once the limit Is reached an Error Is thrown. The current number under evaluation can be found by calling Cstack_info.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.keepSource">
 <summary>
 When TRUE, the source code for functions (newly defined Or loaded) Is stored internally allowing comments to be kept in the right places. 
 Retrieve the source by printing Or using deparse(fn, control = "useSource").
 The Default Is interactive(), i.e., True For interactive use.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.keepSourcePkgs">
 <summary>
 As for keep.source, used only when packages are installed. Defaults to FALSE unless the environment variable R_KEEP_PKG_SOURCE Is set to yes.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.maxPrint">
 <summary>
 Integer, defaulting To 99999. print Or show methods can make use Of this Option, to limit the amount of information that Is printed, to something in the order of (And typically slightly less than) max.print entries.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.OutDec">
 <summary>
 character string containing a single character. The preferred character to be used as the decimal point in output conversions, that Is in printing, plotting, format And as.character but Not when deparsing nor by sprintf nor formatC (which are sometimes used prior to printing.)
 Only single-byte characters were supported prior to R 3.2.0. In R 3.2.1 And earlier, multi- (Or zero-) character OutDec were accepted, but always worked only partially.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.pager">
 <summary>
 the command used For displaying text files by file.show. Defaults To "internal", which uses a pager similar To the GUI console. Another possibility Is "console" To use the console itself. 
 Can be a character String Or an R Function, In which Case it needs To accept the arguments (files, header, title, delete.file) corresponding To the first four arguments Of file.show.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.papersize">
 <summary>
 the Default paper format used by postscript; Set by environment variable R_PAPERSIZE When R Is started: If that Is unset Or invalid it defaults To "a4", Or "letter" In US And Canadian locales.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.pdfviewer">
 <summary>
 Default PDF viewer. The Default Is Set from the environment variable R_PDFVIEWER, which defaults To the full path To open.exe, a utility supplied With R.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.printcmd">
 <summary>
 the command used by postscript For printing; Set by environment variable R_PRINTCMD When R Is started. 
 This should be a command that expects either input To be piped To 'stdin’ or to be given a single filename argument. Usually set to "lpr" on a Unix-alike.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.prompt">
 <summary>
 a non-empty String To be used For R's prompt; should usually end in a blank (" ").
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.scipen">
 <summary>
 Integer.A penalty to be applied when deciding to print numeric values in fixed Or exponential notation. 
 Positive values bias towards fixed And negative towards scientific notation: fixed notation will be preferred unless it Is more than scipen digits wider.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showWarnCalls">
 <summary>
 a logical. Should warning And Error messages show a summary Of the Call stack? By Default Error calls are shown In non-interactive sessions.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showNCalls">
 <summary>
 Integer.Controls how long the sequence of calls must be (in bytes) before ellipses are used. Defaults to 40 And should be at least 30 And no more than 500.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showErrorLocations">
 <summary>
 Should source locations Of errors be printed? If Set To True Or "top", the source location that Is highest On the stack (the most recent Call) will be printed. 
 "bottom" will print the location Of the earliest Call found On the stack.
 
 Integer values can select other entries. The value 0 corresponds to "top" And positive values count down the stack from there. 
 The value -1 corresponds to "bottom" And negative values count up from there.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showErrorMessages">
 <summary>
 a logical. Should Error messages be printed? Intended For use With Try Or a user-installed Error handler.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.stringsAsFactors">
 <summary>
 The Default setting For arguments Of data.frame And read.table.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.texi2dvi">
 <summary>
 used by functions texi2dvi And texi2pdf In package tools.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.timeout">
 <summary>
 Integer.The timeout For some Internet operations, in seconds. Default 60 seconds. See download.file And connections.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.topLevelEnvironment">
 <summary>
 see topenv And sys.source.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.urlMethod">
 <summary>
 character string: the Default method For url. Normally unset, which Is equivalent To "default", which Is "internal" except On Windows.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.useFancyQuotes">
 <summary>
 controls the use Of directional quotes In sQuote, dQuote And In rendering text help (see Rd2txt In package tools). Can be True, False, "TeX" Or "UTF-8".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.verbose">
 <summary>
 logical. Should R report extra information on progress? Set to TRUE by the command-line option --verbose.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warn">
 <summary>
 sets the handling Of warning messages. If warn Is negative all warnings are ignored. If warn Is zero (the Default) warnings are stored until the top–level Function returns. 
 If 10 Or fewer warnings were signalled they will be printed otherwise a message saying how many were signalled. 
 An Object called last.warning Is created And can be printed through the Function warnings. If warn Is one, warnings are printed As they occur. 
 If warn Is two Or larger all warnings are turned into errors.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warnPartialMatchArgs">
 <summary>
 logical. If true, warns if partial matching Is used in argument matching.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warnPartialMatchAttr">
 <summary>
 logical. If true, warns if partial matching Is used in extracting attributes via attr.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warnPartialMatchDollar">
 <summary>
 logical. If true, warns if partial matching Is used for extraction by $.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warningExpression">
 <summary>
 an R code expression To be called If a warning Is generated, replacing the standard message. If non-null it Is called irrespective Of the value Of Option warn.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warningLength">
 <summary>
 sets the truncation limit For Error And warning messages. A non-negative Integer, With allowed values 100...8170, Default 1000.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.nwarnings">
 <summary>
 the limit For the number Of warnings kept When warn = 0, Default 50. This will discard messages If called whilst they are being collected.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.width">
 <summary>
 controls the maximum number Of columns On a line used In printing vectors, matrices And arrays, And When filling by cat.
 Columns are normally the same As characters except In East Asian languages.
 
 You may want To change this If you re-size the window that R Is running In. Valid values are 10...10000 With Default normally 80. (The limits On valid values are In file 'Print.h’ and can be changed by re-compiling R.) Some R consoles automatically change the value when they are resized.
 See the examples On Startup For one way To Set this automatically from the terminal width When R Is started.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.device">
 <summary>
 a character String giving the name Of a Function, Or the Function Object itself, which When called creates a New graphics device Of the Default type For that session. 
 The value Of this Option defaults To the normal screen device (e.g., X11, windows Or quartz) For an interactive session, And pdf In batch use Or If a screen Is Not available. 
 If Set To the name Of a device, the device Is looked For first from the Global environment (that Is down the usual search path) And Then In the grDevices Namespace.
 The Default values In interactive And non-interactive sessions are configurable via environment variables R_INTERACTIVE_DEVICE And R_DEFAULT_DEVICE respectively.
 The search logic For 'the normal screen device’ is that this is windows on Windows, and quartz if available on OS X (running at the console, and compiled into the build). 
 Otherwise X11 is used if environment variable DISPLAY is set.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.deviceAskDefault">
 <summary>
 logical. The default for devAskNewPage("ask") when a device Is opened.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.locatorBell">
 <summary>
 logical. Should selection in locator And identify be confirmed by a bell? Default TRUE. Honoured at least on X11 And windows devices.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.windowsTimeout">
 <summary>
 (Windows-only) integer vector of length 2 representing two times in milliseconds. 
 These control the double-buffering of windows devices when that Is enabled: the first Is the delay after plotting finishes (Default 100) And the second Is the update interval during continuous plotting (Default 500). The values at the time the device Is opened are used.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.maxContourSegments">
 <summary>
 positive integer, defaulting to 25000 if Not set. A limit on the number of segments in a single contour line in contour Or contourLines.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.contrasts">
 <summary>
 the Default contrasts used In model fitting such As With aov Or lm. 
 A character vector Of length two, the first giving the Function To be used With unordered factors And the second the Function To be used With ordered factors. 
 By Default the elements are named c("unordered", "ordered"), but the names are unused.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.NAaction">
 <summary>
 the name Of a Function For treating missing values (NA's) for certain situations.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showCoefPvalues">
 <summary>
 logical, affecting whether P values are printed in summary tables of coefficients. See printCoefmat.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showNlsConvergence">
 <summary>
 logical, should nls convergence messages be printed for successful fits?
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.showSignifStars">
 <summary>
 logical, should stars be printed on summary tables of coefficients? See printCoefmat.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.tsEps">
 <summary>
 the relative tolerance For certain time series (ts) computations. Default 1E-05.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.tsSCompat">
 <summary>
 logical. Used to select S compatibility for plotting time-series spectra. See the description of argument log in plot.spec.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.BioC_mirror">
 <summary>
 The URL Of a Bioconductor mirror For use by setRepositories, e.g. the Default "http://bioconductor.org" Or the European mirror "http://bioconductor.statistik.tu-dortmund.de". 
 Can be Set by chooseBioCmirror.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.browser">
 <summary>
 The HTML browser To be used by browseURL. This sets the Default browser On UNIX Or a non-Default browser On Windows. 
 Alternatively, an R Function that Is called With a URL As its argument. See browseURL For further details.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.ccaddress">
 <summary>
 Default Cc: address used by create.post (And hencebug.report And help.request). Can be False Or "".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.citationBibtexMax">
 <summary>
 Default 1; the maximal number of bibentries (bibentry) in a citation for which the bibtex version Is printed in addition to the text one.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.deCellwidth">
 <summary>
 Integer: the cell widths (number Of characters) To be used In the data editor dataentry. If this Is unset (the Default), 0, negative Or NA, variable cell widths are used.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.demoAsk">
 <summary>
 Default For the ask argument Of demo.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.editor">
 <summary>
 a non-empty String Or a Function that sets the Default text editor, e.g., For edit. Set from the environment variable EDITOR On UNIX, Or If unset VISUAL Or vi.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.exampleAsk">
 <summary>
 Default For the ask argument Of example.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.helpPorts">
 <summary>
 optional integer vector for setting ports of the internal HTTP server, see startDynamicHelp.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.helpSearchTypes">
 <summary>
 Default types Of documentation To be searched by help.search And ??.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.helpTryAllPackages">
 <summary>
 Default For an argument Of help.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.help_type">
 <summary>
 Default For an argument Of help, used also As the help type by ?.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.HTTPUserAgent">
 <summary>
 String used as the user agent in HTTP(S) requests. If NULL, requests will be made without a user agent header. The default Is R (&lt;version> &lt;platform> &lt;arch> &lt;os>) .
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.installLock">
 <summary>
 logical: should per-directory package locking be used by install.packages? 
 Most useful For binary installs On OS X And Windows, but can be used In a startup file For source installs via R CMD INSTALL. 
 For binary installs, can also be the character String "pkgloack".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.internetInfo">
 <summary>
 The minimum level Of information To be printed On URL downloads etc, Using the "internal" And "libcurl" methods. Default Is 2, For failure causes. 
 Set To 1 Or 0 To Get more detailed information (For the "internal" method 0 provides more information than 1).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.installPackagesCheckSource">
 <summary>
 Used by install.packages (And indirectly update.packages) On platforms which support binary packages. Possible values "yes" And "no", With unset being equivalent To "yes".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.installPackagesCompileFromSource">
 <summary>
 Used by install.packages(type = "both") (And indirectly update.packages) On platforms which support binary packages. Possible values are "never", "interactive" 
 (which means ask In interactive use And "never" In batch use) And "always". 
 The Default Is taken from environment variable R_COMPILE_AND_INSTALL_PACKAGES, With Default "interactive" If unset. However, install.packages uses "never" unless a make program Is found, consulting the environment variable MAKE.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.mailer">
 <summary>
 Default emailing method used by create.post And hence bug.report And help.request.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.menuGraphics">
 <summary>
 Logical: should graphical menus be used If available?. Defaults To True. Currently applies To Select.list, chooseCRANmirror, setRepositories And To Select from multiple (text) help files In help.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.pkgType">
 <summary>
 The Default type Of packages To be downloaded And installed – see install.packages. Possible values are "win.binary", "source" And "both" (the Default). 
 Some OS X builds use "mac.binary" And "mac.binary.mavericks". Value "binary" Is a synonym For the native binary type (If there Is one); "both" Is used by install.packages To choose between source And binary installs.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.repos">
 <summary>
 URLs of the repositories for use by update.packages. Defaults to c(CRAN="@CRAN@"), a value that causes some utilities to prompt for a CRAN mirror. 
 To avoid this do set the CRAN mirror, by something Like local({r &lt;- getOption("repos"); r["CRAN"] &lt;- "http://my.local.cran"; options(repos = r)}).
 Note that you can add more repositories (Bioconductor And Omegahat, R-Forge, Rforge.net ...) Using setRepositories.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.unzip">
 <summary>
 a character String used by unzip: the path Of the external program unzip Or "internal". Defaults To "internal" When the internal unzip code Is used.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.useHTTPS">
 <summary>
 logical. Used by chooseCRANmirror: are secure mirrors preferred? If Not Set, True Is assumed.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.mcCores">
 <summary>
 a integer giving the maximum allowed number of additional R processes allowed to be run in parallel to the current R process. 
 Defaults to the setting of the environment variable MC_CORES if set. Most applications which use this assume a limit of 2 if it Is unset.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.dvipscmd">
 <summary>
 character string giving a command to be used in the (deprecated) off-line printing of help pages via PostScript. Defaults to "dvips".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.base.options.warnFPU">
 <summary>
 logical, by default undefined. If true, a warning Is produced whenever dyn.load repairs the control word damaged by a buggy DLL.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.base.Control">
 <summary>
 These are the basic control-flow constructs of the R language. They function in much the same way as control statements in any Algol-like language. 
 They are all reserved words.
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.base.Control.if(System.String,System.String)">
 <summary>
 A length-one logical vector that is not NA. Conditions of length greater than one are accepted with a warning, but only the first element is used. Other types are coerced to logical if possible, ignoring any class.
 </summary>
 <param name="cond"></param>
 <param name="action"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.base.Control.if(System.String,System.Func{System.String})">
 <summary>
 A length-one logical vector that is not NA. Conditions of length greater than one are accepted with a warning, but only the first element is used. Other types are coerced to logical if possible, ignoring any class.
 </summary>
 <param name="cond"></param>
 <param name="action"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.base.Control.if(System.String,System.Func{System.String},System.Func{System.String})">
 <summary>
 These are the basic control-flow constructs of the R language. They function in much the same way as control statements in any Algol-like language. They are all reserved words.
 </summary>
 <param name="cond">
 A length-one logical vector that is not NA. Conditions of length greater than one are accepted with a warning, but only the first element is used. Other types are coerced to logical if possible, ignoring any class.
 </param>
 <param name="[true]">An expression in a formal sense. This is either a simple expression or a so called compound expression, usually of the form { expr1 ; expr2 }.</param>
 <param name="[else]">An expression in a formal sense. This is either a simple expression or a so called compound expression, usually of the form { expr1 ; expr2 }.</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.base.Control.ifelse(System.String,System.String,System.String)">
 <summary>
 ifelse returns a value with the same shape as test which is filled with elements selected from either yes or no depending on whether the element of test is TRUE or FALSE.
 
 If yes or no are too short, their elements are recycled. yes will be evaluated if and only if any element of test is true, and analogously for no.
 Missing values In test give missing values In the result.
 </summary>
 <param name="test">an object which can be coerced to logical mode.</param>
 <param name="yes">Return values For True elements Of test.</param>
 <param name="no">return values for false elements of test.</param>
 <returns>
 A vector of the same length and attributes (including dimensions and "class") as test and data values from the values of yes or no. 
 The mode of the answer will be coerced from logical to accommodate first any values taken from yes and then any values taken from no.
 </returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.dynamicTreeCut.Func.printFlush(System.Object[])">
 <summary>
 Passes all its arguments unchaged to the standard print function; after the execution of print it flushes the console, if possible.
 </summary>
 <param name="args">Arguments to be passed to the standard print function.</param>
 <returns></returns>
 <remarks>
 Passes all its arguments unchaged to the standard print function; after the execution of print it flushes the console, if possible.
 </remarks>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.flashClust.flashClust">
 <summary>
 Faster alternative to hclust.
 This function implements optimal hierarchical clustering with the same interface as hclust.
 </summary>
 <remarks>
 See the description of hclust for details on available clustering methods.

 If members! = NULL, Then d Is taken To be a dissimilarity matrix between clusters instead Of dissimilarities between singletons And members gives the number Of observations per cluster. 
 This way the hierarchical cluster algorithm can be 'started in the middle of the dendrogram’, e.g., in order to reconstruct the part of the tree above a cut (see examples). 
 Dissimilarities between clusters can be efficiently computed (i.e., without hclust itself) only for a limited number of distance/linkage combinations, the simplest one being squared Euclidean distance and centroid linkage. 
 In this case the dissimilarities between the clusters are the squared Euclidean distances between cluster means.
 flashClust Is a wrapper for compatibility with older code.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.flashClust.flashClust.d">
 <summary>
 a dissimilarity Structure As produced by 'dist'.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.flashClust.flashClust.method">
 <summary>
 the agglomeration method To be used. This should be (an unambiguous abbreviation Of) one Of "ward", "single", "complete", "average", "mcquitty", "median" Or "centroid".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.flashClust.flashClust.members">
 <summary>
 NULL Or a vector with length size of d. See the 'Details’ section.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.gplots.jetColors">
 <summary>
 Using function call 'get.jetColors()' to gets the colors vector
 </summary>
 <remarks>
 旭仔-畜牧 564307915@qq.com
 </remarks>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.gplots.venn">
 <summary>
 Plot a Venn diagrams for up to 5 sets
 </summary>
 <remarks>
 data should be either a named list of vectors containing character string names ("GeneAABBB", "GeneBBBCY", .., "GeneXXZZ")
 or indexes of group intersections (1, 2, .., N), or a data frame containing indicator variables (TRUE, FALSE, TRUE, ..)
 for group intersectionship. Group names will be taken from the component list element or column names.

 Invisibly returns an object of class "venn", containing a matrix of all possible sets of groups, and the observed count of
 items belonging to each The fist column contains observed counts, subsequent columns contain 0-1 indicators of group
 intersectionship.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.data">
 <summary>
 Either a list list containing vectors of names or indices of group intersections,
 or a data frame containing boolean indicators of group intersectionship (see below)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.universe">
 <summary>
 Subset of valid name/index elements. Values ignore values in codedata not
 in this list will be ignored. Use NA to use all elements of data (the default).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.small">
 <summary>
 Character scaling of the smallest group counts
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.showSetLogicLabel">
 <summary>
 Logical flag indicating whether the internal group label should be displayed
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.simplify">
 <summary>
 Logical flag indicating whether unobserved groups should be omitted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.showPlot">
 <summary>
 Logical flag indicating whether the plot should be displayed. If false, simply returns the group count matrix.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.venn.intersections">
 <summary>
 Logical flag indicating if the returned object should have the attribute "individuals.in.intersections"
 featuring for every set a list of individuals that are assigned to it.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.gplots.plot">
 <summary>
 ## S3 method for class '<see cref="T:RDotNET.Extensions.VisualBasic.gplots.venn"/>'
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.plot.x">
 <summary>
 Either a list list containing vectors of names or indices of group intersections,
 or a data frame containing boolean indicators of group intersectionship (see below)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.plot.small">
 <summary>
 Character scaling of the smallest group counts
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.plot.showSetLogicLabel">
 <summary>
 Logical flag indicating whether the internal group label should be displayed
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.plot.simplify">
 <summary>
 Logical flag indicating whether unobserved groups should be omitted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.rowInd">
 <summary>
 基因的排列顺序
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.colInd">
 <summary>
 
 </summary>
 <returns>下标是从1开始的？？</returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.rowDendrogram">
 <summary>
 heatmap.2行聚类的结果，(基因)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.breaks">
 <summary>
 进行<see cref="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.col"/>映射的数值等级
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.col">
 <summary>
 热图里面的颜色代码
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.TreeBuilder(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
 <summary>
 
 </summary>
 <param name="result"></param>
 <param name="names">{id, name}</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.GetRowDendrogram(System.Collections.Generic.Dictionary{System.String,System.String})">
 <summary>
 如果字典参数为空，则使用heatmap结果之中的默认字典
 </summary>
 <param name="names"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.GetColDendrogram(System.Collections.Generic.Dictionary{System.String,System.String})">
 <summary>
 如果字典参数为空，则使用heatmap结果之中的默认字典
 </summary>
 <param name="names"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.__getMaps(System.Int32[],System.String[])">
 <summary>
 
 </summary>
 <param name="inds">索引的下标是从1开始的</param>
 <param name="locus"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.gplots.heatmap2OUT.RParser(System.String[],System.String[],System.String[])">
 <summary>
 
 </summary>
 <param name="out">heatmap.2输出结果</param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.gplots.heatmap2">
 <summary>
 A heat map is a false color image (basically image(t(x))) with a dendrogram added to the left side and/or to the top. Typically, reordering of the rows and columns according to some set of values (row or column means) within the restrictions imposed by the dendrogram is carried out.
 This heatmap provides a number Of extensions To the standard R heatmap Function.
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.Rowv">
 <summary>
 determines if and how the row dendrogram should be reordered.	By default, it is TRUE, which implies dendrogram is computed and reordered based on row means. If NULL or FALSE, then no dendrogram is computed and no reordering is done. If a dendrogram, then it is used "as-is", ie without any reordering. If a vector of integers, then dendrogram is computed and reordered based on the order of the vector.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.Colv">
 <summary>
 determines if and how the column dendrogram should be reordered.	Has the options as the Rowv argument above and additionally when x is a square matrix, Colv="Rowv" means that columns should be treated identically to the rows.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.dendrogram">
 <summary>
 character string indicating whether to draw 'none', 'row', 'column' or 'both' dendrograms. Defaults to 'both'. However, if Rowv (or Colv) is FALSE or NULL and dendrogram is 'both', then a warning is issued and Rowv (or Colv) arguments are honoured.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.breaks">
 <summary>
 (optional) Either a numeric vector indicating the splitting points for binning x into colors, or a integer number of break points to be used, in which case the break points will be spaced equally between min(x) and max(x).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.symbreaks">
 <summary>
 Boolean indicating whether breaks should be made symmetric about 0. Defaults to TRUE if the data includes negative values, and to FALSE otherwise.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.col">
 <summary>
 colors used for the image. Defaults to heat colors (heat.colors).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.colsep">
 <summary>
 (optional) vector of integers indicating which columns or rows should be separated from the preceding columns or rows by a narrow space of color sepcolor.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.rowsep">
 <summary>
 (optional) vector of integers indicating which columns or rows should be separated from the preceding columns or rows by a narrow space of color sepcolor.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.sepcolor">
 <summary>
 (optional) vector of integers indicating which columns or rows should be separated from the preceding columns or rows by a narrow space of color sepcolor.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.sepwidth">
 <summary>
 (optional) Vector of length 2 giving the width (colsep) or height (rowsep) the separator box drawn by colsep and rowsep as a function of the width (colsep) or height (rowsep) of a cell. Defaults to c(0.05, 0.05)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.cellnote">
 <summary>
 (optional) matrix of character strings which will be placed within each color cell, e.g. p-value symbols.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.notecex">
 <summary>
 (optional) numeric scaling factor for cellnote items.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.notecol">
 <summary>
 (optional) character string specifying the color for cellnote text. Defaults to "cyan".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.naColor">
 <summary>
 Color to use for missing value (NA). Defaults to the plot background color.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.trace">
 <summary>
 character string indicating whether a solid "trace" line should be drawn across 'row's or down 'column's, 'both' or 'none'. The distance of the line from the center of each color-cell is proportional to the size of the measurement. Defaults to 'column'.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.tracecol">
 <summary>
 character string giving the color for "trace" line. Defaults to "cyan".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.hline">
 <summary>
 Vector of values within cells where a horizontal or vertical dotted line should be drawn. The color of the line is controlled by linecol. Horizontal lines are only plotted if trace is 'row' or 'both'. Vertical lines are only drawn if trace 'column' or 'both'. hline and vline default to the median of the breaks, linecol defaults to the value of tracecol.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.vline">
 <summary>
 Vector of values within cells where a horizontal or vertical dotted line should be drawn. The color of the line is controlled by linecol. Horizontal lines are only plotted if trace is 'row' or 'both'. Vertical lines are only drawn if trace 'column' or 'both'. hline and vline default to the median of the breaks, linecol defaults to the value of tracecol.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.linecol">
 <summary>
 Vector of values within cells where a horizontal or vertical dotted line should be drawn. The color of the line is controlled by linecol. Horizontal lines are only plotted if trace is 'row' or 'both'. Vertical lines are only drawn if trace 'column' or 'both'. hline and vline default to the median of the breaks, linecol defaults to the value of tracecol.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.srtRow">
 <summary>
	angle of row/column labels, in degrees from horizontal
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.srtCol">
 <summary>
 angle of row/column labels, in degrees from horizontal
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.adjRow">
 <summary>
 2-element vector giving the (left-right, top-bottom) justification of row/column labels (relative to the text orientation).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.adjCol">
 <summary>
 2-element vector giving the (left-right, top-bottom) justification of row/column labels (relative to the text orientation).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.offsetRow">
 <summary>
 Number of character-width spaces to place between row/column labels and the edge of the plotting region.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.offsetCol">
 <summary>
 Number of character-width spaces to place between row/column labels and the edge of the plotting region.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.colRow">
 <summary>
 color of row/column labels, either a scalar to set the color of all labels the same, or a vector providing the colors of each label item
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.colCol">
 <summary>
 color of row/column labels, either a scalar to set the color of all labels the same, or a vector providing the colors of each label item
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.key">
 <summary>
 logical indicating whether a color-key should be shown.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keysize">
 <summary>
 numeric value indicating the size of the key
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.densityInfo">
 <summary>
 character string indicating whether to superimpose a 'histogram', a 'density' plot, or no plot ('none') on the color-key.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.denscol">
 <summary>
 character string giving the color for the density display specified by density.info, defaults to the same value as tracecol.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.symkey">
 <summary>
 Boolean indicating whether the color key should be made symmetric about 0. Defaults to TRUE if the data includes negative values, and to FALSE otherwise.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.densadj">
 <summary>
 Numeric scaling value for tuning the kernel width when a density plot is drawn on the color key. (See the adjust parameter for the density function for details.) Defaults to 0.25.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keyTitle">
 <summary>
 main title of the color key. If set to NA no title will be plotted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keyxlab">
 <summary>
 x axis label of the color key. If set to NA no label will be plotted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keyylab">
 <summary>
 y axis label of the color key. If set to NA no label will be plotted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keyxtickfun">
 <summary>
 function computing tick location and labels for the xaxis of the color key. Returns a named list containing parameters that can be passed to axis. See examples.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keyytickfun">
 <summary>
 function computing tick location and labels for the y axis of the color key. Returns a named list containing parameters that can be passed to axis. See examples.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.keyPar">
 <summary>
 graphical parameters for the color key. Named list that can be passed to par.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.lmat">
 <summary>
 visual layout: position matrix, column height, column width. See below for details
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.lhei">
 <summary>
 visual layout: position matrix, column height, column width. See below for details
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.lwid">
 <summary>
 visual layout: position matrix, column height, column width. See below for details
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.gplots.heatmap2.extrafun">
 <summary>
 A function to be called after all other work. See examples.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Graphics.plot">
 <summary>
 Generic function for plotting of R objects. For more details about the graphical parameter arguments, see par.
 For simple scatter plots, plot.default will be used. 
 However, there are plot methods for many R objects, including functions, data.frames, density objects, etc. Use methods(plot) And the documentation for these.
 </summary>
 <remarks>
 The two step types differ in their x-y preference: Going from (x1,y1) to (x2,y2) with x1 &lt; x2, type = "s" moves first horizontal, then vertical, whereas type = "S" moves the other way around.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.x">
 <summary>
 the coordinates Of points In the plot. Alternatively, a Single plotting Structure, Function Or any R Object With a plot method can be provided.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.y">
 <summary>
 the y coordinates Of points In the plot, Optional If x Is an appropriate Structure.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.type">
 <summary>
 what type Of plot should be drawn. Possible types are
 
 "p" for points,
 "l" for lines,
 "b" for both,
 "c" for the lines part alone of "b",
 "o" for both 'overplotted’,
 "h" for 'histogram’ like (or ‘high-density’) vertical lines,
 "s" for stair steps,
 "S" for other steps, see 'Details’ below,
 "n" for no plotting.

 All other types give a warning Or an Error; Using, e.g., type = "punkte" being equivalent To type = "p" For S compatibility. 
 Note that some methods, e.g. plot.factor, Do Not accept this.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.main">
 <summary>
 an overall title For the plot: see title.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.sub">
 <summary>
 A Sub() title for the plot: see title.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.xlab">
 <summary>
 A title For the x axis: see title.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.ylab">
 <summary>
 A title For the y axis: see title.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Graphics.plot.asp">
 <summary>
 the y / x aspect ratio, see plot.window.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice">
 <summary>
 Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files. 
 </summary>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.WriteImage(System.String)">
 <summary>
 Execute the statement that comes from the function <see cref="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.bmp(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)"/>,
 <see cref="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.jpeg(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)"/>,
 <see cref="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.png(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)"/>,
 <see cref="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.tiff(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String)"/>
 </summary>
 <param name="plot"></param>
 <returns></returns>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.bmp(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
 <summary>
 
 </summary>
 <param name="plot">画图的语句</param>
 <param name="filename">the name Of the output file, up To 511 characters. The page number Is substituted If a C Integer format Is included In the character String, As In the Default, And tilde-expansion Is performed (see path.expand). (The result must be less than 600 characters Long. See postscript For further details.) </param>
 <param name="width"></param>
 <param name="height"></param>
 <param name="units"></param>
 <param name="pointsize"></param>
 <param name="bg"></param>
 <param name="res"></param>
 <param name="family"></param>
 <param name="restoreConsole"></param>
 <returns></returns>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.jpeg(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
 <summary>
 
 </summary>
 <param name="plot">画图的语句</param>
 <param name="filename"></param>
 <param name="width"></param>
 <param name="height"></param>
 <param name="units"></param>
 <param name="pointsize"></param>
 <param name="quality"></param>
 <param name="bg"></param>
 <param name="res"></param>
 <param name="family"></param>
 <param name="restoreConsole"></param>
 <returns></returns>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.png(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
 <summary>
 
 </summary>
 <param name="plot">画图的语句</param>
 <param name="filename"></param>
 <param name="width"></param>
 <param name="height"></param>
 <param name="units"></param>
 <param name="pointsize"></param>
 <param name="bg"></param>
 <param name="res"></param>
 <param name="family"></param>
 <param name="restoreConsole"></param>
 <returns></returns>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Graphics.GraphicsDevice.tiff(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
 <summary>
 
 </summary>
 <param name="plot">画图的语句</param>
 <param name="filename"></param>
 <param name="width"></param>
 <param name="height"></param>
 <param name="units"></param>
 <param name="pointsize"></param>
 <param name="bg"></param>
 <param name="res"></param>
 <param name="family"></param>
 <param name="restoreConsole"></param>
 <returns></returns>
 
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grDevice.width">
 <summary>
 the width of the device.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grDevice.height">
 <summary>
 the height of the device.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grDevice.family">
 <summary>
 A length-one character vector specifying the default font family. The default means to use the font numbers on the Windows GDI versions and "sans" on the cairographics versions.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grDevice.bg">
 <summary>
 the initial background colour: can be overridden by setting par("bg").
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.grDevices.grDevice.Plot(System.String)">
 <summary>
 生成创建图像文件的脚本代码
 </summary>
 <param name="plots">绘图的脚本表达式</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.grDevices.grDevice.Plot(System.Func{System.String})">
 <summary>
 生成创建图像文件的脚本代码
 </summary>
 <param name="plots">绘图的脚本表达式</param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.grDevices.pdf">
 <summary>
 pdf starts the graphics device driver for producing PDF graphics.
 </summary>
 <remarks>
 All arguments except file default to values given by pdf.options(). The ultimate defaults are quoted in the arguments section.
 pdf() opens the file file And the PDF commands needed to plot any graphics requested are sent to that file.
 The file argument Is interpreted As a C Integer format As used by sprintf, With Integer argument the page number. The Default gives files 'Rplot001.pdf’, ..., ‘Rplot999.pdf’, ‘Rplot1000.pdf’, ....
 The family argument can be used To specify a PDF-specific font family As the initial/Default font For the device. If additional font families are To be used they should be included In the fonts argument.
 If a device-independent R graphics font family Is specified (e.g., via par(family = ) In the graphics package), the PDF device makes use Of the PostScript font mappings To convert the R graphics font family To a PDF-specific font family description. (See the documentation For pdfFonts.)
 This device does Not embed fonts In the PDF file, so it Is only straightforward To use mappings To the font families that can be assumed To be available In any PDF viewer: "Times" (equivalently "serif"), "Helvetica" (equivalently "sans") And "Courier" (equivalently "mono"). Other families may be specified, but it Is the user's responsibility to ensure that these fonts are available on the system and third-party software (e.g., Ghostscript) may be required to embed the fonts so that the PDF can be included in other documents (e.g., LaTeX): see embedFonts. The URW-based families described for postscript can be used with viewers such as GSView which utilise URW fonts. Since embedFonts makes use of Ghostscript, it should be able to embed the URW-based families for use with other viewers.
 See postscript For details Of encodings, As the internal code Is Shared between the drivers. The native PDF encoding Is given In file 'PDFDoc.enc’.
 The PDF produced Is fairly simple, With Each page being represented As a Single stream (by Default compressed And possibly With references To raster images). The R graphics model does Not distinguish graphics objects at the level Of the driver Interface.
 The version argument declares the version Of PDF that gets produced. The version must be at least 1.2 When compression Is used, 1.4 For semi-transparent output To be understood, And at least 1.3 If CID fonts are To be used: If any Of these features are used the version number will be increased (With a warning). (PDF 1.4 was first supported by Acrobat 5 In 2001; it Is very unlikely Not To be supported In a current viewer.)
 Line widths As controlled by par(lwd = ) are In multiples Of 1/96 inch. Multiples less than 1 are allowed. pch = "." With cex = 1 corresponds To a square Of side 1/72 inch, which Is also the 'pixel’ size assumed for graphics parameters such as "cra".
 The paper argument sets the /MediaBox entry In the file, which defaults To width by height. If it Is Set To something other than "special", a device region Of the specified size Is (by Default) centred On the rectangle given by the paper size: If either width Or height Is less than 0.1 Or too large To give a total margin Of 0.5 inch, it Is reset To the corresponding paper dimension minus 0.5. Thus If you want the Default behaviour Of postscript use pdf(paper = "a4r", width = 0, height = 0) To centre the device region On a landscape A4 page With 0.25 inch margins.
 When the background colour Is fully transparent (as Is the initial default value), the PDF produced does Not paint the background. Most PDF viewers will use a white canvas so the visual effect Is if the background were white. This will Not be the case when printing onto coloured paper, though.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.file">
 <summary>
 a character string giving the name of the file. If it is of the form "|cmd", the output is piped to the command given by cmd. If it is NULL, then no external file is created (effectively, no drawing occurs), but the device may still be queried (e.g., for size of text).
 For use with onefile = FALSE give a C integer format such as "Rplot%03d.pdf" (the default in that case). (See postscript for further details.)
 Tilde expansion(see path.expand) Is done.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.onefile">
 <summary>
 logical: if true (the default) allow multiple figures in one file. If false, generate a file with name containing the page number for each page. 
 Defaults to TRUE, and forced to true if file is a pipe.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.title">
 <summary>
 title string to embed as the /Title field in the file. Defaults to "R Graphics Output".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.fonts">
 <summary>
 a character vector specifying R graphics font family names for additional fonts which will be included in the PDF file. Defaults to NULL.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.version">
 <summary>
 a string describing the PDF version that will be required to view the output. 
 This is a minimum, and will be increased (with a warning) if necessary. Defaults to "1.4", but see ‘Details’.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.paper">
 <summary>
 the target paper size. The choices are "a4", "letter", "legal" (or "us") and "executive" (and these can be capitalized), or "a4r" and "USr" for rotated (‘landscape’). 
 The default is "special", which means that the width and height specify the paper size. 
 A further choice is "default"; if this is selected, the papersize is taken from the option "papersize" if that is set and as "a4" if it is unset or empty. 
 Defaults to "special".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.encoding">
 <summary>
 the name of an encoding file. See postscript for details. Defaults to "default".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.fg">
 <summary>
 the initial foreground color to be used. Defaults to "black".
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.pointsize">
 <summary>
 the default point size to be used. Strictly speaking, in bp, that is 1/72 of an inch, but approximately in points. Defaults to 12.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.pagecentre">
 <summary>
 logical: should the device region be centred on the page? – is only relevant for paper != "special". Defaults to TRUE.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.colormodel">
 <summary>
 a character string describing the color model: currently allowed values are "srgb", "gray" (or "grey") and "cmyk". Defaults to "srgb". See section ‘Color models’.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.useDingbats">
 <summary>
 logical. Should small circles be rendered via the Dingbats font? Defaults to TRUE, which produces smaller and better output. 
 Setting this to FALSE can work around font display problems in broken PDF viewers: although this font is one of the 14 guaranteed to be available in all PDF viewers, that guarantee is not always honoured.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.useKerning">
 <summary>
 logical. Should kerning corrections be included in setting text and calculating string widths? Defaults to TRUE.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.fillOddEven">
 <summary>
 logical controlling the polygon fill mode: see polygon for details. Defaults to FALSE.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.pdf.compress">
 <summary>
 logical. Should PDF streams be generated with Flate compression? Defaults to TRUE.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.grDevices.grImage">
 <summary>
 Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files.
 </summary>
 <remarks>
 Plots in PNG and JPEG format can easily be converted to many other bitmap formats, and both can be displayed in modern web browsers. The PNG format is lossless and is best for line diagrams and blocks of colour. The JPEG format is lossy, but may be useful for image plots, for example. The BMP format is standard on Windows, and supported by most viewers elsewhere. TIFF is a meta-format: the default format written by tiff is lossless and stores RGB values uncompressed—such files are widely accepted, which is their main virtue over PNG.
 Windows GDI imposes limits On the size Of bitmaps: these are Not documented In the SDK And may depend On the version Of Windows. It seems that width And height are Each limited To 2^15-1. In addition, there are limits On the total number Of pixels which depend On the graphics hardware.
 By Default no resolution Is recorded In the file (except For BMP). Viewers will often assume a nominal resolution Of 72 ppi When none Is recorded. As resolutions In PNG files are recorded In pixels/metre, the reported ppi value will be changed slightly.
 For graphics parameters that make use of dimensions in inches, res ppi (default 72) Is assumed.
 Both bmp And png will use a palette If there are fewer than 256 colours On the page, And record a 24-bit RGB file otherwise. For the png device, type = "cairo" does the PNG output In the driver And so Is compatible With the "windows" type. type = "cairo-png" uses cairographics' PNG backend which will never use a palette and normally creates a larger 32-bit ARGB file—this may work better for specialist uses with semi-transparent colours.
 png(type = "windows") supports transparent backgrounds on 16-bit ('High Color’) or better screens: use bg = "transparent". There is also support for semi-transparent colours of lines, fills and text. However, as there is only partial support for transparency in the graphics toolkit used: if there is a transparent background semi-transparent colours are painted onto a slightly off-white background and hence the pixels are opaque.
 Not all PNG viewers render files with transparency correctly.
 tiff compression types "lzw+p" And "zip+p" use horizontal differencing ('differencing predictor’, section 14 of the TIFF specification) in combination with the compression method, which is effective for continuous-tone images, especially colour ones.
 Prior to R 3.0.3 unknown resolutions in BMP files were sometimes recorded incorrectly: they are now recorded As 72 ppi.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.filename">
 <summary>
 the name of the output file, up to 511 characters. The page number is substituted if a C integer format is included in the character string, as in the default, and tilde-expansion is performed (see path.expand). (The result must be less than 600 characters long. See postscript for further details.)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.units">
 <summary>
 The units in which height and width are given. Can be px (pixels, the default), in (inches), cm or mm.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.pointsize">
 <summary>
 the default pointsize of plotted text, interpreted as big points (1/72 inch) at res ppi.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.res">
 <summary>
 The nominal resolution in ppi which will be recorded in the bitmap file, if a positive integer. Also used for units other than the default. If not specified, taken as 72 ppi to set the size of text and line widths.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.restoreConsole">
 <summary>
 See the ‘Details’ section of windows. For type == "windows" only.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.type">
 <summary>
 Should be plotting be done using Windows GDI or cairographics?
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.grImage.antialias">
 <summary>
 Length-one character vector.
 For allowed values And their effect on fonts with type = "windows" see windows: For that type if the argument Is missing the default Is taken from windows.options()$bitmap.aa.win.
 For allowed values And their effect (on fonts And lines, but Not fills) with type = "cairo" see svg.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.jpeg.quality">
 <summary>
 the ‘quality’ of the JPEG image, as a percentage. Smaller values will give more compression but also more degradation of the image.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.png.type">
 <summary>
 Should be plotting be done using Windows GDI or cairographics?
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.grDevices.tiff.compression">
 <summary>
 the type Of compression To be used.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.stats.distAPI">
 <summary>
 Distance Matrix Computation
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.distAPI.Func(System.String)">
 <summary>
 Distance Matrix Computation
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.distAPI.diag">
 <summary>
 logical value indicating whether the diagonal of the distance matrix should be printed by print.dist.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.distAPI.upper">
 <summary>
 logical value indicating whether the upper triangle of the distance matrix should be printed by print.dist.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.stats.dist">
 <summary>
 This function computes and returns the distance matrix computed by using the specified distance measure to compute the distances between the rows of a data matrix.
 </summary>
 <remarks>
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.dist.x">
 <summary>
 a numeric matrix, data frame or "dist" object.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.dist.method">
 <summary>
 the distance measure to be used. This must be one of "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski". Any unambiguous substring can be given.
 </summary>
 <returns></returns>
 <remarks>
 Available distance measures are (written for two vectors x and y):
 
 euclidean:
 Usual distance between the two vectors (2 norm aka L_2), sqrt(sum((x_i - y_i)^2)).

 maximum:
 Maximum distance between two components Of x And y (supremum norm)

 manhattan:
 Absolute distance between the two vectors (1 norm aka L_1).
 
 canberra:
 sum(|x_i - y_i| / |x_i + y_i|). Terms with zero numerator And denominator are omitted from the sum And treated as if the values were missing.
 
 This Is intended for non-negative values (e.g., counts): taking the absolute value Of the denominator Is a 1998 R modification To avoid negative distances.
 
 binary:
 (aka asymmetric binary): The vectors are regarded As binary bits, so non-zero elements are 'on’ and zero elements are ‘off’. 
 The distance is the proportion of bits in which only one is on amongst those in which at least one is on.

 minkowski:
 The p norm, the pth root Of the sum Of the pth powers Of the differences Of the components.

 Missing values are allowed, And are excluded from all computations involving the rows within which they occur. 
 Further, When Inf values are involved, all pairs Of values are excluded When their contribution To the distance gave NaN Or NA. 
 If some columns are excluded In calculating a Euclidean, Manhattan, Canberra Or Minkowski distance, the sum Is scaled up proportionally To the number Of columns used. 
 If all pairs are excluded When calculating a particular distance, the value Is NA.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.dist.p">
 <summary>
 The power of the Minkowski distance.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.AsDist.m">
 <summary>
 An object with distance information to be converted to a "dist" object. For the default method, a "dist" object, or a matrix (of distances) or an object which can be coerced to such a matrix using as.matrix(). 
 (Only the lower triangle of the matrix is used, the rest is ignored).
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.stats.print">
 <summary>
 ## S3 method for class 'dist'
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.print.x">
 <summary>
 a numeric matrix, data frame or "dist" object.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.print.diag">
 <summary>
 logical value indicating whether the diagonal of the distance matrix should be printed by print.dist.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.print.upper">
 <summary>
 logical value indicating whether the upper triangle of the distance matrix should be printed by print.dist.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.print.digits">
 <summary>
 passed to format inside of print().
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.print.right">
 <summary>
 further arguments, passed to other methods.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.x">
 <summary>
 numeric matrix of the values to be plotted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.distfun">
 <summary>
 function used to compute the distance (dissimilarity) between both rows and columns. Defaults to dist.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.hclustfun">
 <summary>
 function used to compute the hierarchical clustering when Rowv or Colv are not dendrograms. Defaults to hclust. Should take as argument a result of distfun and return an object to which as.dendrogram can be applied.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.reorderfun">
 <summary>
 function(d, w) of dendrogram and weights for reordering the row and column dendrograms. The default uses reorder.dendrogram.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.addExpr">
 <summary>
 expression that will be evaluated after the call to image. Can be used to add components to the plot.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.symm">
 <summary>
 logical indicating if x should be treated symmetrically; can only be true when x is a square matrix.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.revC">
 <summary>
 logical indicating if the column order should be reversed for plotting, such that e.g., for the symmetric case, the symmetry axis is as usual.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.scale">
 <summary>
 character indicating if the values should be centered and scaled in either the row direction or the column direction, or none. The default is "row" if symm false, and "none" otherwise.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.naRM">
 <summary>
 logical indicating whether NA's should be removed.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.margins">
 <summary>
 numeric vector of length 2 containing the margins (see par(mar = *)) for column and row names, respectively.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.ColSideColors">
 <summary>
 (optional) character vector of length ncol(x) containing the color names for a horizontal side bar that may be used to annotate the columns of x.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.RowSideColors">
 <summary>
 (optional) character vector of length nrow(x) containing the color names for a vertical side bar that may be used to annotate the rows of x.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.cexRow">
 <summary>
 positive numbers, used as cex.axis in for the row or column axis labeling. The defaults currently only use number of rows or columns, respectively.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.cexCol">
 <summary>
 positive numbers, used as cex.axis in for the row or column axis labeling. The defaults currently only use number of rows or columns, respectively.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.labRow">
 <summary>
 character vectors with row and column labels to use; these default to rownames(x) or colnames(x), respectively.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.labCol">
 <summary>
 character vectors with row and column labels to use; these default to rownames(x) or colnames(x), respectively.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.main">
 <summary>
 main, x- and y-axis titles; defaults to none.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.xlab">
 <summary>
 main, x- and y-axis titles; defaults to none.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.ylab">
 <summary>
 main, x- and y-axis titles; defaults to none.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.keepDendro">
 <summary>
 logical indicating if the dendrogram(s) should be kept as part of the result (when Rowv and/or Colv are not NA).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap_plot.verbose">
 <summary>
 logical indicating if information should be printed.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.stats.heatmap">
 <summary>
 A heat map is a false color image (basically image(t(x))) with a dendrogram added to the left side and to the top. Typically, reordering of the rows and columns according to some set of values (row or column means) within the restrictions imposed by the dendrogram is carried out.
 </summary>
 <remarks>
 If either Rowv or Colv are dendrograms they are honored (and not reordered). Otherwise, dendrograms are computed as dd &lt;- as.dendrogram(hclustfun(distfun(X))) where X is either x or t(x).
 If either Is a vector (Of 'weights’) then the appropriate dendrogram is reordered according to the supplied values subject to the constraints imposed by the dendrogram, by reorder(dd, Rowv), in the row case. If either is missing, as by default, then the ordering of the corresponding dendrogram is by the mean value of the rows/columns, i.e., in the case of rows, Rowv &lt;- rowMeans(x, na.rm = na.rm). If either is NA, no reordering will be done for the corresponding side.
 By Default (scale = "row") the rows are scaled to have mean zero And standard deviation one. There Is some empirical evidence from genomic plotting that this Is useful.
 The Default colors are Not pretty. Consider Using enhancements such As the RColorBrewer package.
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap.Rowv">
 <summary>
 determines if and how the row dendrogram should be computed and reordered. Either a dendrogram or a vector of values used to reorder the row dendrogram or NA to suppress any row dendrogram (and reordering) or by default, NULL, see ‘Details’ below.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.heatmap.Colv">
 <summary>
 determines if and how the column dendrogram should be reordered. Has the same options as the Rowv argument above and additionally when x is a square matrix, Colv = "Rowv" means that columns should be treated identically to the rows (and so if there is to be no row dendrogram there will not be a column one either).
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.stats.kmeans">
 <summary>
 Perform k-means clustering on a data matrix.
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.kmeans.x">
 <summary>
 numeric matrix Of data, Or an Object that can be coerced To such a matrix (such As a numeric vector Or a data frame With all numeric columns).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.kmeans.centers">
 <summary>
 either the number of clusters, say k, or a set of initial (distinct) cluster centres. If a number, a random set of (distinct) rows in x is chosen as the initial centres.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.kmeans.iterMax">
 <summary>
 the maximum number of iterations allowed.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.kmeans.nstart">
 <summary>
 if centers is a number, how many random sets should be chosen?
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.kmeans.algorithm">
 <summary>
 character: may be abbreviated. Note that "Lloyd" and "Forgy" are alternative names for one algorithm.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.stats.kmeans.trace">
 <summary>
 logical Or integer number, currently only used in the default method ("Hartigan-Wong") If positive(Or True), tracing information On the progress Of the algorithm Is produced. Higher values may produce more tracing information.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI">
 <summary>
 write.table prints its required argument x (after converting it to a data frame if it is not one nor a matrix) to a file or connection.
 </summary>
 <remarks>
 If the table has no columns the rownames will be written only if row.names = TRUE, and vice versa.
 Real And complex numbers are written to the maximal possible precision.
 If a data frame has matrix-Like columns these will be converted To multiple columns In the result (via As.matrix) And so a character col.names Or a numeric quote should refer To the columns In the result, Not the input. Such matrix-Like columns are unquoted by Default.
 Any columns In a data frame which are lists Or have a Class (e.g., dates) will be converted by the appropriate As.character method: such columns are unquoted by Default. 
 On the other hand, any Class information For a matrix Is discarded And non-atomic (e.g., list) matrices are coerced To character.
 Only columns which have been converted To character will be quoted If specified by quote.
 The dec argument only applies To columns that are Not subject To conversion To character because they have a Class Or are part Of a matrix-Like column (Or matrix), In particular To columns Protected by I(). Use options("OutDec") To control such conversions.
 In almost all cases the conversion of numeric quantities Is governed by the option "scipen" (see options), but with the internal equivalent of digits = 15. 
 For finer control, use format to make a character matrix/data frame, And call write.table on that.
 These functions check For a user interrupt every 1000 lines Of output.
 If file Is a non-open connection, an attempt Is made To open it And Then close it after use.
 To write a Unix-style file on Windows, use a binary connection e.g. file = file("filename", "wb").
 </remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.x">
 <summary>
 the object to be written, preferably a matrix or data frame. If not, it is attempted to coerce x to a data frame.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.file">
 <summary>
 either a character string naming a file or a connection open for writing. "" indicates output to the console.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.append">
 <summary>
 logical. Only relevant if file Is a character string. If TRUE, the output Is appended to the file. If FALSE, any existing file of the name Is destroyed.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.quote">
 <summary>
 a logical value (TRUE or FALSE) or a numeric vector. If TRUE, any character or factor columns will be surrounded by double quotes. 
 If a numeric vector, its elements are taken as the indices of columns to quote. In both cases, row and column names are quoted if they are written. 
 If FALSE, nothing is quoted.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.sep">
 <summary>
 the field separator string. Values within each row of x are separated by this string.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.eol">
 <summary>
 the character(s) to print at the end of each line (row). For example, eol = "\r\n" will produce Windows' line endings on a Unix-alike OS, and eol = "\r" will produce files as expected by Excel:mac 2004.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.na">
 <summary>
 the string to use for missing values in the data.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.dec">
 <summary>
 the string to use for decimal points in numeric or complex columns: must be a single character.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.rowNames">
 <summary>
 either a logical value indicating whether the row names of x are to be written along with x, or a character vector of row names to be written.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.colNames">
 <summary>
 either a logical value indicating whether the column names of x are to be written along with x, or a character vector of column names to be written. See the section on ‘CSV files’ for the meaning of col.names = NA.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.qmethod">
 <summary>
 a character string specifying how to deal with embedded double quote characters when quoting strings. 
 Must be one of "escape" (default for write.table), in which case the quote character is escaped in C style by a backslash, or "double" (default for write.csv and write.csv2), in which case it is doubled. You can specify just the initial letter.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.writeTableAPI.fileEncoding">
 <summary>
 character string: if non-empty declares the encoding to be used on a file (not a connection) so the character data can be re-encoded as they are written. See file.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.utils.read.table.writeCsv">
 <summary>
 By default there is no column name for a column of row names. If col.names = NA and row.names = TRUE a blank column name is added, which is the convention used for CSV files to be read by spreadsheets. Note that such CSV files can be read in R by
    read.csv(file = "&lt;filename>", row.names = 1)
  
 write.csv And write.csv2 provide convenience wrappers for writing CSV files. 
 They set sep And dec (see below), qmethod = "double", And col.names to NA if row.names = TRUE (the default) And to TRUE otherwise.
 write.csv uses "." for the decimal point And a comma for the separator.
 </summary>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.utils.read.table.writeCsv2">
 <summary>
 write.csv2 uses a comma for the decimal point and a semicolon for the separator, the Excel convention for CSV files in some Western European locales.
 </summary>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.utils.read.table.readTableAPI">
 <summary>
 Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file.
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTableAPI.file">
 <summary>
 The name Of the file which the data are To be read from. Each row Of the table appears As one line Of the file. 
 If it does Not contain an absolute path, the file name Is relative To the current working directory, getwd(). 
 Tilde-expansion Is performed where supported. This can be a compressed file (see file).
 Alternatively, file can be a readable text-mode connection (which will be opened for reading if necessary, And if so closed (And hence destroyed) at the end of the function call). 
 (If stdin() Is used, the prompts for lines may be somewhat confusing. Terminate input with a blank line Or an EOF signal, Ctrl-D on Unix And Ctrl-Z on Windows. Any pushback on stdin() will be cleared before return.)
 file can also be a complete URL. (For the supported URL schemes, see the 'URLs’ section of the help for url.)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTableAPI.header">
 <summary>
 a logical value indicating whether the file contains the names of the variables as its first line. 
 If missing, the value is determined from the file format: header is set to TRUE if and only if the first row contains one fewer field than the number of columns.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.utils.read.table.readTable">
 <summary>
 [read.table]
 Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file.
 </summary>
 
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.sep">
 <summary>
 the field separator character. Values on each line of the file are separated by this character. If sep = "" (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.quote">
 <summary>
 the set of quoting characters. To disable quoting altogether, use quote = "". See scan for the behaviour on quotes embedded in quotes. Quoting is only considered for columns read as character, which is all of them unless colClasses is specified.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.dec">
 <summary>
 the character used In the file For Decimal points.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.numerals">
 <summary>
 string indicating how to convert numbers whose conversion to double precision would lose accuracy, see type.convert. Can be abbreviated. (Applies also to complex-number inputs.)
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.rowNames">
 <summary>
 a vector of row names. This can be a vector giving the actual row names, or a single number giving the column of the table which contains the row names, or character string giving the name of the table column containing the row names.
 If there Is a header And the first row contains one fewer field than the number Of columns, the first column In the input Is used For the row names. Otherwise If row.names Is missing, the rows are numbered.
 Using row.names = NULL forces row numbering. Missing Or NULL row.names generate row names that are considered To be 'automatic’ (and not preserved by as.matrix).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.colNames">
 <summary>
 a vector of optional names for the variables. The default is to use "V" followed by the column number.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.asIs">
 <summary>
 the default behavior of read.table is to convert character variables (which are not converted to logical, numeric or complex) to factors. 
 The variable as.is controls the conversion of columns not otherwise specified by colClasses. 
 Its value is either a vector of logicals (values are recycled if necessary), or a vector of numeric or character indices which specify which columns should not be converted to factors.
 Note: to suppress all conversions including those of numeric columns, set colClasses = "character".
 Note that As.Is Is specified per column (Not per variable) And so includes the column of row names (if any) And any columns to be skipped.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.naStrings">
 <summary>
 a character vector of strings which are to be interpreted as NA values. Blank fields are also considered to be missing values in logical, integer, numeric and complex fields.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.colClasses">
 <summary>
 character. A vector of classes to be assumed for the columns. Recycled as necessary. If named and shorter than required, names are matched to the column names with unspecified values are taken to be NA.
 Possible values are NA (the Default, When type.convert Is used), "NULL" (When the column Is skipped), one Of the atomic vector classes (logical, Integer, numeric, complex, character, raw), Or "factor", "Date" Or "POSIXct". Otherwise there needs To be an As method (from package methods) For conversion from "character" To the specified formal Class.
 Note that colClasses Is specified per column (Not per variable) And so includes the column Of row names (If any).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.nrows">
 <summary>
 integer: the maximum number of rows to read in. Negative and other invalid values are ignored.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.skip">
 <summary>
 integer: the number of lines of the data file to skip before beginning to read data.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.checkNames">
 <summary>
 logical. If TRUE then the names of the variables in the data frame are checked to ensure that they are syntactically valid variable names. 
 If necessary they are adjusted (by make.names) so that they are, and also to ensure that there are no duplicates.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.fill">
 <summary>
 logical. If TRUE then in case the rows have unequal length, blank fields are implicitly added. See ‘Details’.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.stripWhite">
 <summary>
 logical. Used only when sep has been specified, and allows the stripping of leading and trailing white space from unquoted character fields (numeric fields are always stripped). 
 See scan for further details (including the exact meaning of ‘white space’), remembering that the columns may include the row names.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.blankLinesSkip">
 <summary>
 logical: if TRUE blank lines in the input are ignored.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.commentChar">
 <summary>
 character: a character vector of length one containing a single character or an empty string. Use "" to turn off the interpretation of comments altogether.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.allowEscapes">
 <summary>
 logical. Should C-style escapes such as \n be processed Or read verbatim (the default)? 
 Note that if Not within quotes these could be interpreted as a delimiter (but Not as a comment character). For more details see scan.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.flush">
 <summary>
 logical: if TRUE, scan will flush to the end of the line after reading the last of the fields requested. This allows putting comments after the last field.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.stringsAsFactors">
 <summary>
 logical: should character vectors be converted to factors? Note that this is overridden by as.is and colClasses, both of which allow finer control.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.fileEncoding">
 <summary>
 character string: if non-empty declares the encoding used on a file (not a connection) so the character data can be re-encoded. 
 See the ‘Encoding’ section of the help for file, the ‘R Data Import/Export Manual’ and ‘Note’.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.encoding">
 <summary>
 encoding to be assumed for input strings. 
 It is used to mark character strings as known to be in Latin-1 or UTF-8 (see Encoding): it is not used to re-encode the input, but allows R to handle encoded strings in their native encoding (if one of those two). See ‘Value’ and ‘Note’.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.text">
 <summary>
 character string: if file is not supplied and this is, then data are read from the value of text via a text connection. 
 Notice that a literal string can be used to include (small) data sets within R code.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readTable.skipNul">
 <summary>
 logical: should nuls be skipped?
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readcsv.sep">
 <summary>
 the field separator character. Values on each line of the file are separated by this character. If sep = "" (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readcsv.quote">
 <summary>
 the set of quoting characters. To disable quoting altogether, use quote = "". See scan for the behaviour on quotes embedded in quotes. Quoting is only considered for columns read as character, which is all of them unless colClasses is specified.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readcsv.dec">
 <summary>
 the character used In the file For Decimal points.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readcsv2.sep">
 <summary>
 the field separator character. Values on each line of the file are separated by this character. If sep = "" (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readcsv2.quote">
 <summary>
 the set of quoting characters. To disable quoting altogether, use quote = "". See scan for the behaviour on quotes embedded in quotes. Quoting is only considered for columns read as character, which is all of them unless colClasses is specified.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readcsv2.dec">
 <summary>
 the character used In the file For Decimal points.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readdelim.sep">
 <summary>
 the field separator character. Values on each line of the file are separated by this character. If sep = "" (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readdelim.quote">
 <summary>
 the set of quoting characters. To disable quoting altogether, use quote = "". See scan for the behaviour on quotes embedded in quotes. Quoting is only considered for columns read as character, which is all of them unless colClasses is specified.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readdelim.dec">
 <summary>
 the character used In the file For Decimal points.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readdelim2.sep">
 <summary>
 the field separator character. Values on each line of the file are separated by this character. If sep = "" (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readdelim2.quote">
 <summary>
 the set of quoting characters. To disable quoting altogether, use quote = "". See scan for the behaviour on quotes embedded in quotes. Quoting is only considered for columns read as character, which is all of them unless colClasses is specified.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.read.table.readdelim2.dec">
 <summary>
 the character used In the file For Decimal points.
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.utils.combn">
 <summary>
 Generate all combinations of the elements of x taken m at a time. If x is a positive integer, returns all combinations of the elements of seq(x) taken m at a time. 
 If argument FUN is not NULL, applies a function given by the argument to each point. If simplify is FALSE, returns a list; 
 otherwise returns an array, typically a matrix. ... are passed unchanged to the FUN function, if specified.
 
 Factors x are accepted from R 3.1.0 (although coincidentally they worked for simplify = FALSE in earlier versions).
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.combn.x">
 <summary>
 vector source for combinations, or integer n for x &lt;- seq_len(n).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.combn.m">
 <summary>
 number of elements to choose.
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.combn.FUN">
 <summary>
 function to be applied to each combination; default NULL means the identity, i.e., to return the combination (vector of length m).
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.utils.combn.simplify">
 <summary>
 logical indicating if the result should be simplified to an array (typically a matrix); if FALSE, the function returns a list. Note that when simplify = TRUE as by default, the dimension of the result is simply determined from FUN(1st combination) (for efficiency reasons). This will badly fail if FUN(u) is not of constant length.
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ScriptBuilder.op_Concatenate(RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ScriptBuilder,System.String)">
 <summary>
 Append
 </summary>
 <param name="sb"></param>
 <param name="s"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ScriptBuilder.op_Addition(RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ScriptBuilder,System.String)">
 <summary>
 AppendLine
 </summary>
 <param name="sb"></param>
 <param name="s"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ScriptBuilder.op_Addition(RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ScriptBuilder,RDotNET.Extensions.VisualBasic.IRToken)">
 <summary>
 AppendLine
 </summary>
 <param name="sb"></param>
 <param name="s"></param>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RBoolean.TRUE">
 <summary>
 T
 </summary>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RBoolean.FALSE">
 <summary>
 F
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RBoolean.RScript">
 <summary>
 <see cref="P:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RBoolean.TRUE"/> or <see cref="P:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RBoolean.FALSE"/>
 </summary>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RExpression">
 <summary>
 The R Expression object, is a basic parts of the R statement.
 (R表达式，是脚本单词元<see cref="T:RDotNET.Extensions.VisualBasic.IRToken"/>的一部分)
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RExpression.op_LessThanOrEqual(System.String,RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RTypes.RExpression)">
 <summary>
 variable value assignment
 </summary>
 <param name="s"></param>
 <param name="token"></param>
 <returns></returns>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RAttribute.Name">
 <summary>
 API token name
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RAttribute.#ctor(System.String)">
 <summary>
 Declaring a R function
 </summary>
 <param name="name">R function name</param>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.Parameter.#ctor(System.String,RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ValueTypes,System.Boolean,System.Boolean)">
 <summary>
 API会自动根据类型来修正路径之中的分隔符的
 </summary>
 <param name="name"></param>
 <param name="opt">Is this parameter optional?</param>
 <param name="forceFirst">是否强制当前的这个参数处于第一个序列化的位置</param>
</member>
<member name="F:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ValueTypes.Path">
 <summary>
 这个是一个字符串类型的文件路径
 </summary>
</member>
<member name="F:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.ValueTypes.List">
 <summary>
 vectors, factors or a list containing these.(list类型的参数的参数名将不会被序列化)
 </summary>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RFunc">
 <summary>
 Declaring a R function entry point.
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RFunc.#ctor(System.String)">
 <summary>
 Declaring a R function entry point.
 </summary>
 <param name="name"></param>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RImport">
 <summary>
 Declaring a R function entry point.
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.RImport.#ctor(System.String,System.String)">
 <summary>
 Declaring a R function entry point.
 </summary>
 <param name="name">The R function name</param>
 <param name="require">The required package name of this function.</param>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.BuilderAPI">
 <summary>
 Build script token
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.BuilderAPI.GetScript(System.Object,System.Type)">
 <summary>
 R.func(param="",...)
 </summary>
 <param name="token"></param>
 <returns></returns>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.BuilderAPI.__getScript(System.Object,System.Type)">
 <summary>
 Create script token from the class
 </summary>
 <param name="token"></param>
 <param name="type"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.BuilderAPI.GetAPIName(System.Type)">
 <summary>
 GET API name
 </summary>
 <param name="type"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.BuilderAPI.GetScript``1(``0)">
 <summary>
 R.func(param="",...)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="token"></param>
 <returns></returns>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.BuilderAPI.__getExpr(System.Object,System.Reflection.PropertyInfo,System.String,RDotNET.Extensions.VisualBasic.Services.ScriptBuilder.Parameter)">
 <summary>
 name=value
 </summary>
 <param name="x"></param>
 <param name="prop"></param>
 <param name="name"></param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.IRProvider">
 <summary>
 A basic object model as a token in the R script.(一个提供脚本语句的最基本的抽象对象)
 </summary>
 <remarks>就只通过一个函数来提供脚本执行语句</remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.IRProvider.Requires">
 <summary>
 The package names that required of this script file.
 (需要加载的R的包的列表)
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRProvider.RScript">
 <summary>
 Get R Script text from this R script object build model.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.IScriptProvider">
 <summary>
 This abstract object provides a interface for generates the R script.
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.RScripts.NA">
 <summary>
 "NA" 字符串，而不是NA空值常量
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.dim(System.String)">
 <summary>
 Retrieve or set the dimension of an object.
 </summary>
 <param name="x">
 an R object, for example a matrix, array or data frame.
 For the default method, either NULL or a numeric vector, which is coerced to integer (by truncation).
 </param>
 <returns>
 For an array (And hence in particular, for a matrix) dim retrieves the dim attribute of the object. It Is NULL Or a vector of mode integer.
 The replacement method changes the "dim" attribute (provided the New value Is compatible) And removes any "dimnames" And "names" attributes.
 </returns>
 <remarks>
 Details

 The functions Dim And Dim&lt;- are internal generic primitive functions.
 Dim has a method For data.frames, which returns the lengths Of the row.names attribute Of x And Of x (As the numbers Of rows And columns respectively).
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.t(System.String)">
 <summary>
 Given a matrix or data.frame x, t returns the transpose of x.
 </summary>
 <param name="x">a matrix or data frame, typically.</param>
 <returns>A matrix, with dim and dimnames constructed appropriately from those of x, and other attributes except names copied across.</returns>
 <remarks>
 This is a generic function for which methods can be written. The description here applies to the default and "data.frame" methods.
 A data frame Is first coerced To a matrix: see as.matrix. When x Is a vector, it Is treated as a column, i.e., the result Is a 1-row matrix.
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.UnixPath(System.String,System.Boolean)">
 <summary>
 Normalize the file path as the URL format in Unix system.
 </summary>
 <param name="file">The file path string</param>
 <param name="extendsFull">是否转换为全路径？默认不转换</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.c(System.String[])">
 <summary>
 c(....)
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.c(System.Object[])">
 <summary>
 c(....)
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.median(System.String)">
 <summary>

 </summary>
 <param name="x">是一个对象，不是字符串</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.names(System.String)">
 <summary>
 Functions to get or set the names of an object.
 </summary>
 <param name="x">an R object.</param>
 <returns>
 a character vector of up to the same length as x, or NULL.

 Value
 For names, NULL Or a character vector of the same length as x. (NULL Is given if the object has no names, including for objects of types which cannot have names.)
 For an environment, the length Is the number of objects in the environment but the order of the names Is arbitrary.
 For names&lt;-, the updated object. (Note that the value of names(x) &lt;- value Is that of the assignment, value, Not the return value from the left-hand side.)

 Note
 For vectors, the names are one of the attributes with restrictions on the possible values. For pairlists, the names are the tags And converted To And From a character vector.
 For a one-dimensional array the names attribute really Is dimnames[[1]].
 Formally classed aka “S4” objects typically have slotNames() (And no names()).
 </returns>
 <remarks>
 names is a generic accessor function, and names&lt;- is a generic replacement function. The default methods get and set the "names" attribute of a vector (including a list) or pairlist.
 For an environment env, names(env) gives the names of the corresponding list, i.e., names(as.list(env, all.names = TRUE)) which are also given by ls(env, all.names = TRUE, sorted = FALSE). If the environment Is used as a hash table, names(env) are its “keys”.
 If value Is shorter than x, it Is extended by character NAs To the length Of x.
 It Is possible to update just part of the names attribute via the general rules: see the examples. This works because the expression there Is evaluated As z &lt;- "names&lt;-"(z, "[&lt;-"(names(z), 3, "c2")).
 The name "" Is special: it Is used to indicate that there Is no name associated with an element of a (atomic Or generic) vector. Subscripting by "" will match nothing (Not even elements which have no name).
 A name can be character NA, but such a name will never be matched And Is likely To lead To confusion.
 Both are primitive functions.
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.commandArgs(System.Boolean)">
 <summary>
 Provides access to a copy of the command line arguments supplied when this R session was invoked.
 </summary>
 <param name="trailingOnly">logical. Should only arguments after --args be returned?</param>
 <returns>
 A character vector containing the name of the executable and the user-supplied command line arguments.
 The first element is the name of the executable by which R was invoked.
 The exact form of this element is platform dependent: it may be the fully qualified name, or simply the last component (or basename) of the application, or for an embedded R it can be anything the programmer supplied.
 If trailingOnly = True, a character vector Of those arguments (If any) supplied after --args.
 </returns>
 <remarks>
 These arguments are captured before the standard R command line processing takes place. This means that they are the unmodified values.
 This is especially useful with the --args command-line flag to R, as all of the command line after that flag is skipped.
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.rep(System.String[])">
 <summary>
 rep replicates the values in x. It is a generic function, and the (internal) default method is described here.
 </summary>
 <param name="x">a vector (of any mode including a list) or a factor or (for rep only) a POSIXct or POSIXlt or Date object; or an S4 object containing such an object.</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RScripts.list(System.String[])">
 <summary>
 Functions to construct, coerce and check for both kinds of R lists.
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.IRScript">
 <summary>
 The interface of the R script model.(R脚本的数据模型对象的接口)
 </summary>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRScript.RScript">
 <summary>
 这个函数会自动添加library包，继承类只需要复写<see cref="M:RDotNET.Extensions.VisualBasic.IRScript.__R_script"/>方法即可
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.IRScript.SaveTo(System.String)">
 <summary>
 保存脚本文件到文件系统之上
 </summary>
 <param name="FilePath"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.Sqrt(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 abs(x) computes the absolute value of x, sqrt(x) computes the (principal) square root of x, √{x}.
 </summary>
 <param name="x">a numeric or complex vector or array.</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.Exp(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 log computes logarithms, by default natural logarithms, log10 computes common (i.e., base 10) logarithms, 
 and log2 computes binary (i.e., base 2) logarithms. 
 The general form log(x, base) computes logarithms with base base.
 log1p(x) computes log(1+x) accurately also for |x| &lt;&lt; 1.
 exp computes the exponential function.
 expm1(x) computes exp(x) - 1 accurately also for |x| &lt;&lt; 1.
 </summary>
 <param name="x">a numeric or complex vector.</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.Log(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Double)">
 <summary>
 
 </summary>
 <param name="x">a numeric or complex vector.</param>
 <returns></returns>
 <param name="base">a positive or complex number: the base with respect to which logarithms are computed. Defaults to e=exp(1).</param>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.Trunc(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 Rounding of Numbers
 </summary>
 <param name="x"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.BesselI(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Boolean)">
 <summary>
 Bessel Functions of integer and fractional order, of first and second kind, J(nu) and Y(nu), 
 and Modified Bessel functions (of first and third kind), I(nu) and K(nu).
 </summary>
 <returns>
 Numeric vector with the (scaled, if expon.scaled = TRUE) values of the corresponding Bessel function.
 The length of the result is the maximum of the lengths of the parameters. All parameters are recycled to that length.
 </returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.Sort(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Boolean)">
 <summary>
 Sorting or Ordering Vectors
 Sort (or order) a vector or factor (partially) into ascending or descending order. For ordering along more than one variable, e.g., for sorting data frames, see order.
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.VectorMath.Order(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Boolean,System.Boolean)">
 <summary>
 order returns a permutation which rearranges its first argument into ascending or descending order, breaking ties by further arguments. sort.list is the same, using only one argument.
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Poisson">
 <summary>
 Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Poisson.rPois(System.Int32,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.
 </summary>
 <param name="n">number of random values to return.</param>
 <param name="lambda">vector of (non-negative) means.</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Poisson.Dpois(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Boolean)">
 <summary>
 Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.
 </summary>
 <param name="x">vector of (non-negative integer) quantiles.</param>
 <param name="lambda">vector of (non-negative) means.</param>
 <param name="log">logical; if TRUE, probabilities p are given as log(p).</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Normal">
 <summary>
 The Normal Distribution
 Density, distribution function, quantile function and random generation for the normal distribution with mean equal to mean and standard deviation equal to sd.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Normal.qnorm(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Int32,System.Boolean,System.Boolean)">
 <summary>
 
 </summary>
 <param name="p">vector of probabilities.</param>
 <param name="mean">vector of means.</param>
 <param name="sd">vector of standard deviations.</param>
 <param name="lowertail">logical; if TRUE (default), probabilities are P[X ≤ x] otherwise, P[X > x].</param>
 <param name="logp">logical; if TRUE, probabilities p are given as log(p).</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Skellam">
 <summary>
 Skellam distribution
 
 
 </summary>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.MathExtension.Skellam.DskellamSp(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Boolean)">
 <summary>
 Density, distribution function, quantile function and random number generation for the Skellam distribution with parameters lambda1 and lambda2. 
 </summary>
 <param name="x">vector of quantiles.</param>
 <param name="lambda1">vectors of (non-negative) means.</param>
 <param name="lambda2">vectors of (non-negative) means.</param>
 <param name="log">logical; if TRUE, probabilities p are given as log(p).</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Is.Finite(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 is.finite and is.infinite return a vector of the same length as x, indicating which elements are finite (not infinite and not missing) or infinite.
 </summary>
 <param name="x">R object to be tested: the default methods handle atomic vectors.</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI">
 <summary>
 R function bridge to VisualBasic
 </summary>
 <remarks></remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Missing``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Does a Formal Argument have a Value?
 missing can be used to test whether a value was specified as an argument to a function.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="x">a formal argument.</param>
 <returns></returns>
 <remarks>
 Missing(x) is only reliable if x has not been altered since entering the function: in particular it will always be false after x &lt;- match.arg(x).
 The example shows how a plotting function can be written to work with either a pair of vectors giving x and y coordinates of points to be plotted or a single vector giving y values to be plotted against their indices.
 Currently missing can only be used in the immediate body of the function that defines the argument, not in the body of a nested function or a local call. This may change in the future.
 This is a ‘special’ primitive function: it must not evaluate its argument.
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Missing``1(``0)">
 <summary>
 Does a Formal Argument have a Value?
 missing can be used to test whether a value was specified as an argument to a function.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="x">a formal argument.</param>
 <returns></returns>
 <remarks>
 Missing(x) is only reliable if x has not been altered since entering the function: in particular it will always be false after x &lt;- match.arg(x).
 The example shows how a plotting function can be written to work with either a pair of vectors giving x and y coordinates of points to be plotted or a single vector giving y values to be plotted against their indices.
 Currently missing can only be used in the immediate body of the function that defines the argument, not in the body of a nested function or a local call. This may change in the future.
 This is a ‘special’ primitive function: it must not evaluate its argument.
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Warnings">
 <summary>
 Warnings and its print method print the variable last.warning in a pleasing form.
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.warning(System.Collections.Generic.IEnumerable{System.Object},System.Boolean,System.Boolean,System.Boolean,System.Object)">
 <summary>
 Generates a warning message that corresponds to its argument(s) and (optionally) the expression or function from which it was called.
 </summary>
 <param name="args">zero or more objects which can be coerced to character (and which are pasted together with no separator) or a single condition object.</param>
 <param name="Call">logical, indicating if the call should become part of the warning message.</param>
 <param name="immediate">logical, indicating if the call should be output immediately, even if getOption("warn") &lt;= 0.</param>
 <param name="noBreaks"></param>
 <param name="domain"></param>
 <returns>The warning message as character string, invisibly.</returns>
 <remarks>
 The result depends on the value of options("warn") and on handlers established in the executing code.
 If a condition object is supplied it should be the only argument, and further arguments will be ignored, with a message.
 warning signals a warning condition by (effectively) calling signalCondition. If there are no handlers or if all handlers return,
 then the value of warn = getOption("warn") is used to determine the appropriate action. If warn is negative warnings are ignored;
 if it is zero they are stored and printed after the top–level function has completed; if it is one they are printed as they occur
 and if it is 2 (or larger) warnings are turned into errors. Calling warning(immediate. = TRUE) turns warn &lt;= 0 into warn = 1 for this call only.
 If warn is zero (the default), a read-only variable last.warning is created. It contains the warnings which can be printed via a call to warnings.
 Warnings will be truncated to getOption("warning.length") characters, default 1000, indicated by [... truncated].
 While the warning is being processed, a muffleWarning restart is available. If this restart is invoked with invokeRestart, then warning returns immediately.
 An attempt is made to coerce other types of inputs to warning to character vectors.
 suppressWarnings evaluates its expression in a context that ignores all warnings.
 </remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Any(RDotNET.Extensions.VisualBasic.RBase.Vectors.BooleanVector,System.Boolean)">
 <summary>
 Given a set of logical vectors, is at least one of the values true?
 </summary>
 <param name="x">zero or more logical vectors. Other objects of zero length are ignored, and the rest are coerced to logical ignoring any class.</param>
 <param name="NaRM"></param>
 <returns>The value is a logical vector of length one.</returns>
 <remarks></remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.All(RDotNET.Extensions.VisualBasic.RBase.Vectors.BooleanVector,System.Boolean)">
 <summary>
 Given a set of logical vectors, are all of the values true?
 </summary>
 <param name="x"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Length``1(RDotNET.Extensions.VisualBasic.RBase.Vectors.GenericVector{``0},System.Int32)">
 <summary>
 Get or set the length of vectors (including lists) and factors, and of any other R object for which a method has been defined.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="x">an R object. For replacement, a vector or factor.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Length``1(RDotNET.Extensions.VisualBasic.RBase.Vectors.GenericVector{``0})">
 <summary>
 Get or set the length of vectors (including lists) and factors, and of any other R object for which a method has been defined.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="x">an R object. For replacement, a vector or factor.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Rep(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Int32)">
 <summary>
 Replicate Elements of Vectors and Lists
 </summary>
 <param name="x"></param>
 <param name="LengthOut">non-negative integer: the desired length of the output vector.</param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Rep(RDotNET.Extensions.VisualBasic.RBase.Vectors.BooleanVector,System.Int32)">
 <summary>
 Replicate Elements of Vectors and Lists
 </summary>
 <param name="x"></param>
 <param name="LengthOut">non-negative integer: the desired length of the output vector.</param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Paste(System.Collections.Generic.IEnumerable{System.String},System.String)">
 <summary>
 Concatenate Strings, Concatenate vectors after converting to character.
 </summary>
 <param name="args"></param>
 <param name="sep">a character string to separate the terms. Not NA_character_.</param>
 <returns>
 A character vector of the concatenated values. This will be of length zero if all the objects are, unless collapse is non-NULL in which case it is a single empty string.
 If any input into an element of the result is in UTF-8 (and none are declared with encoding "bytes", (see Encoding), that element will be in UTF-8, otherwise in the
 current encoding in which case the encoding of the element is declared if the current locale is either Latin-1 or UTF-8, at least one of the corresponding inputs
 (including separators) had a declared encoding and all inputs were either ASCII or declared.
 If an input into an element is declared with encoding "bytes", no translation will be done of any of the elements and the resulting element will have encoding "bytes".
 If collapse is non-NULL, this applies also to the second, collapsing, phase, but some translation may have been done in pasting object together in the first phase.
 </returns>
 <remarks></remarks>

</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.IfElse``1(RDotNET.Extensions.VisualBasic.RBase.Vectors.BooleanVector,RDotNET.Extensions.VisualBasic.RBase.Vectors.GenericVector{``0},RDotNET.Extensions.VisualBasic.RBase.Vectors.GenericVector{``0})">
 <summary>
 Conditional Element Selection
 ifelse returns a value with the same shape as test which is filled with elements selected from either yes or no depending on whether the element of test is TRUE or FALSE.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="test">an object which can be coerced to logical mode.</param>
 <param name="yes">return values for true elements of test.</param>
 <param name="no">return values for false elements of test.</param>
 <returns>A vector of the same length and attributes (including dimensions and "class") as test and data values from the values of yes or no. The mode of the answer
 will be coerced from logical to accommodate first any values taken from yes and then any values taken from no.</returns>
 <remarks>If yes or no are too short, their elements are recycled. yes will be evaluated if and only if any element of test is true, and analogously for no.
 Missing values in test give missing values in the result.</remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.PrimitiveAPI.Try``1(System.Func{``0},System.Boolean)">
 <summary>
 Try an Expression Allowing Error Recovery
 try is a wrapper to run an expression that might fail and allow the user's code to handle error-recovery.
 </summary>
 <returns></returns>
 <param name="silent">logical: should the report of error messages be suppressed?</param>
 <remarks></remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.RBase.Vectors.GenericVector`1.Dim">
 <summary>
 向量维数
 </summary>
 <remarks></remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.RBase.Vectors.GenericVector`1.GET(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 
 </summary>
 <param name="a">只有一个元素的</param>
 <param name="b">只有一个元素的</param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Addition(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 两个向量加法算符重载，分量分别相加
 </summary>
 <param name="v1"></param>
 <param name="v2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Subtraction(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 向量减法算符重载，分量分别想减
 </summary>
 <param name="v1"></param>
 <param name="v2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Multiply(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 向量乘法算符重载，分量分别相乘，相当于MATLAB中的  .*算符
 </summary>
 <param name="v1"></param>
 <param name="v2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Division(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 向量除法算符重载，分量分别相除，相当于MATLAB中的   ./算符
 </summary>
 <param name="v1"></param>
 <param name="v2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Addition(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Double)">
 <summary>
 向量减加实数，各分量分别加实数
 </summary>
 <param name="v1"></param>
 <param name="a"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Subtraction(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Double)">
 <summary>
 向量减实数，各分量分别减实数
 </summary>
 <param name="v1"></param>
 <param name="a"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Multiply(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Double)">
 <summary>
 向量 数乘，各分量分别乘以实数
 </summary>
 <param name="v1"></param>
 <param name="a"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Division(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,System.Double)">
 <summary>
 向量 数除，各分量分别除以实数
 </summary>
 <param name="v1"></param>
 <param name="a"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Addition(System.Double,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 实数加向量
 </summary>
 <param name="a"></param>
 <param name="v1"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Subtraction(System.Double,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 实数减向量
 </summary>
 <param name="a"></param>
 <param name="v1"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_Multiply(System.Double,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 向量 数乘
 </summary>
 <param name="a"></param>
 <param name="v1"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_BitwiseOr(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector,RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 向量内积
 </summary>
 <param name="v1"></param>
 <param name="v2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_OnesComplement(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 向量模的平方
 </summary>
 <param name="v1"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector.op_UnaryNegation(RDotNET.Extensions.VisualBasic.RBase.Vectors.Vector)">
 <summary>
 负向量 
 </summary>
 <param name="v1"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RExtensionInvoke">
 <summary>
 Wrapper for R engine script invoke.
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RExtensionInvoke.Library(RDotNET.REngine,System.String)">
 <summary>
 This function equals to the function &lt;library> in R system.
 </summary>
 <param name="packageName"></param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RExtensionInvoke.WriteLine(RDotNET.REngine,System.String)">
 <summary>
 获取来自于R服务器的输出，而不将结果打印于终端之上
 </summary>
 <param name="script"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RExtensionInvoke.WriteLine(RDotNET.REngine,RDotNET.Extensions.VisualBasic.IRProvider)">
 <summary>
 获取来自于R服务器的输出，而不将结果打印于终端之上
 </summary>
 <param name="script"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RExtensionInvoke.q(RDotNET.REngine)">
 <summary>
 Quite the R system.
 </summary>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.Serialization">
 <summary>
 Convert the R object into a .NET object from the specific type schema information.
 (将R之中的对象内存数据转换为.NET之中指定的对象实体)
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.LoadFromStream``1(RDotNET.SymbolicExpression)">
 <summary>
 Deserialize the R object into a specific .NET object. <see cref="T:RDotNET.SymbolicExpression"></see>  =====> "T"
 </summary>
 <typeparam name="T"></typeparam>
 <param name="RData"></param>
 <returns></returns>
 <remarks>
 反序列化的规则：
 1. S4对象里面的Slot为对象类型之中的属性
 2. 任何对象属性都会被表示为数组
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.LoadRStream(RDotNET.SymbolicExpression,System.Type)">
 <summary>
 Needs your manual type casting in your program. 
 </summary>
 <param name="RData"></param>
 <param name="Type"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.InternalLoadS4Object(RDotNET.SymbolicExpression,System.Type,System.Int32)">
 <summary>
 The recursive operation of the S4Object in R starts from here. this recursive operation will stop when the property value is not a S4Object.
 (这个可能是一个递归的过程，一直解析到各个属性的R类型不再是S4对象类型为止)
 </summary>
 <param name="RData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.__valueMapping(System.Object,System.Reflection.PropertyInfo,System.Object@)">
 <summary>
 
 </summary>
 <param name="value"></param>
 <param name="pInfo"></param>
 <param name="obj">对象实例</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.__rVectorToNETProperty(System.Type,System.Object,System.Reflection.PropertyInfo,System.Object@)">
 <summary>
 All of the object in R is a vector, so that we needs this function to convert the R vector to a property value.
 </summary>
 <param name="pTypeInfo"></param>
 <param name="value"></param>
 <param name="pInfo"></param>
 <param name="obj"></param>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.__mappingCollectionType(System.Object,System.Reflection.PropertyInfo,System.Object@,System.Type)">
 <summary>
 Object() to T()()
 </summary>
 <param name="value"></param>
 <param name="pInfo"></param>
 <param name="obj"></param>
 <param name="pTypeInfo"></param>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.__loadFromStream(RDotNET.SymbolicExpression,System.Type,System.Int32)">
 <summary>
 Load the R symbolic expression data recursivly start from here.
 </summary>
 <param name="RData"></param>
 <param name="TypeInfo"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Serialization.__createMatrix(RDotNET.SymbolicExpression,System.Type,System.Int32)">
 <summary>
 
 </summary>
 <param name="RData"></param>
 <param name="typeInfo"></param>
 <param name="debugLv">Debugger output levels</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.Install.Packages(System.String)">
 <summary>
 查看目标程序包是否已经安装在R系统里面
 </summary>
 <param name="packageName"></param>
 <returns></returns>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.RSystem">
 <summary>
 R Engine extensions.(似乎对于RDotNet而言，在一个应用程序的实例进程之中仅允许一个REngine的实例存在，所以在这里就统一的使用一个公共的REngine的实例对象)
 </summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.RSystem.RServer">
 <summary>
 The default R Engine server.
 </summary>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.#cctor">
 <summary>
 Initialize the default R Engine.
 </summary>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.TryInit(System.String)">
 <summary>
 Manual set up R init environment.
 </summary>
 <param name="R_HOME"></param>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.packageVersion(System.String)">
 <summary>
 Parses and returns the ‘DESCRIPTION’ file of a package.
 </summary>
 <param name="pkg">a character string with the package name.</param>
 <returns></returns>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.Library">
 <summary>
 查看R引擎中已经安装的包
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.Source(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean,System.Int32,System.Boolean)">
 <summary>
 The R engine execute a R script. source causes R to accept its input from the named file or URL or connection.
 Input is read and parsed from that file until the end of the file is reached, then the parsed expressions are
 evaluated sequentially in the chosen environment.
 (R引擎执行文件系统之中的一个R脚本)
 </summary>
 <param name="file">a connection Or a character String giving the pathname Of the file Or URL To read from. ""
 indicates the connection stdin().
 </param>
 <param name="local">TRUE, FALSE or an environment, determining where the parsed expressions are evaluated.
 FALSE (the default) corresponds to the user's workspace (the global environment) and TRUE to the environment
 from which source is called.</param>
 <param name="echo">logical; if TRUE, each expression is printed after parsing, before evaluation.</param>
 <param name="printEval">logical; if TRUE, the result of eval(i) is printed for each expression i; defaults to the value of echo.</param>
 <param name="verbose">if TRUE, more diagnostics (than just echo = TRUE) are printed during parsing and evaluation of input,
 including extra info for each expression.</param>
 <param name="promptEcho">character; gives the prompt to be used if echo = TRUE.</param>
 <param name="maxDeparseLength">integer; is used only if echo is TRUE and gives the maximal number of characters output for
 the deparse of a single expression.</param>
 <param name="chdir">logical; if TRUE And file Is a pathname, the R working directory Is temporarily changed to the
 directory containing file for evaluating.</param>
 <param name="encoding">character vector. The encoding(s) to be assumed when file is a character string: see file.
 A possible value is "unknown" when the encoding is guessed: see the ‘Encodings’ section.</param>
 <param name="continueEcho">character; gives the prompt to use on continuation lines if echo = TRUE.</param>
 <param name="skipEcho">integer; how many comment lines at the start of the file to skip if echo = TRUE.</param>
 <param name="keepSource">logical: should the source formatting be retained When echoing expressions, If possible?</param>
 <returns></returns>
 <remarks>
 Note that running code via source differs in a few respects from entering it at the R command line. Since expressions are not executed
 at the top level, auto-printing is not done. So you will need to include explicit print calls for things you want to be printed
 (and remember that this includes plotting by lattice, FAQ Q7.22). Since the complete file is parsed before any of it is run, syntax
 errors result in none of the code being run. If an error occurs in running a syntactically correct script, anything assigned into the
 workspace by code that has been run will be kept (just as from the command line), but diagnostic information such as traceback() will
 contain additional calls to withVisible.

 All versions Of R accept input from a connection With End Of line marked by LF (As used On Unix), CRLF (As used On DOS/Windows) Or CR
 (As used On classic Mac OS) And map this To newline. The final line can be incomplete, that Is missing the final End-Of-line marker.

 If keep.source Is True(the Default In interactive use), the source Of functions Is kept so they can be listed exactly As input.

 Unlike input from a console, lines In the file Or On a connection can contain an unlimited number Of characters.

 When skip.echo > 0, that many comment lines at the start of the file will Not be echoed. This does Not affect the execution of the code at all.
 If there are executable lines within the first skip.echo lines, echoing will start with the first of them.

 If echo Is True And a deparsed expression exceeds max.deparse.length, that many characters are output followed by .... [TRUNCATED] .

 [Encodings]
 By Default the input Is read And parsed In the current encoding Of the R session. This Is usually what it required, but occasionally re-encoding
 Is needed, e.g. If a file from a UTF-8-Using system Is To be read On Windows (Or vice versa).

 The rest Of this paragraph applies If file Is an actual filename Or URL (And Not "" nor a connection). If encoding = "unknown", an attempt Is
 made To guess the encoding: the result Of localeToCharset() Is used As a guide. If encoding has two Or more elements, they are tried In turn
 until the file/URL can be read without Error In the trial encoding. If an actual encoding Is specified (rather than the Default Or "unknown")
 In a Latin-1 Or UTF-8 locale Then character strings In the result will be translated To the current encoding And marked As such (see Encoding).

 If file Is a connection (including one specified by "", it Is Not possible To re-encode the input inside source, And so the encoding argument
 Is just used To mark character strings In the parsed input In Latin-1 And UTF-8 locales: see parse.
 </remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.Library(System.String)">
 <summary>
 Load a available R package which was installed in the R system.(加载一个可用的R包)
 </summary>
 <param name="packageName"></param>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.getwd">
 <summary>
 Display the current working directory
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RDotNET.Extensions.VisualBasic.RSystem.Seq(System.Int32,System.Int32,System.Double)">
 <summary>
 [Sequence Generation] Generate regular sequences. seq is a standard generic with a default method.
 </summary>
 <param name="From">the starting and (maximal) end values of the sequence. Of length 1 unless just from is supplied as an unnamed argument.</param>
 <param name="To">the starting and (maximal) end values of the sequence. Of length 1 unless just from is supplied as an unnamed argument.</param>
 <param name="By">number: increment of the sequence</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.RSystem.RColors">
 <summary>
 枚举R中所有的颜色代码
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RDotNET.Extensions.VisualBasic.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:RDotNET.Extensions.VisualBasic.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
</members>
</doc>
